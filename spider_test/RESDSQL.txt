select count(*) from club
select count(*) from club
select club.name from club   order by club.name asc
select club.name from club   order by club.name asc
select club.manager , club.captain from club
select club.manager , club.captain from club
select club.name from club where  club.manufacturer != "Nike"
select club.name from club where  club.manufacturer != "Nike"
select player.name from player   order by player.wins_count asc
select player.name from player   order by player.wins_count asc
select player.name from player   order by player.earnings desc limit 1
select player.name from player   order by player.earnings desc limit 1
select distinct player.country from player where  player.earnings > 1200000
select distinct player.country from player where  player.earnings > 1200000
select player.country from player where  player.wins_count > 2   order by player.earnings desc limit 1
select player.country from player where  player.wins_count > 2   order by player.earnings desc limit 1
select player.name , club.name from player join club on player.Club_ID = club.Club_ID
select player.name , player.club_id from player
select club.name from player join club on player.Club_ID = club.Club_ID where  player.wins_count > 2
select club.name from player join club on player.Club_ID = club.Club_ID  group by club.name having  count(*) > 2
select player.name from player join club on player.Club_ID = club.Club_ID where  club.manager = "Sam Allardyce"
select player.name from player join club on player.Club_ID = club.Club_ID where  club.manager = "Sam Allardyce"
select club.name from player join club on player.Club_ID = club.Club_ID  group by player.club_id  order by avg(player.earnings) desc
select club.name from player join club on player.Club_ID = club.Club_ID  group by club.name  order by avg(player.earnings) desc
select club.manufacturer , count(*) from club  group by club.manufacturer
select club.manufacturer , count(*) from club  group by club.manufacturer
select club.manufacturer from club  group by club.manufacturer  order by count(*) desc limit 1
select club.manufacturer from club  group by club.manufacturer  order by count(*) desc limit 1
select club.manufacturer from club  group by club.manufacturer having  count(*) > 1
select club.manufacturer from club  group by club.manufacturer having  count(*) > 1
select player.country , count(*) from player  group by player.country having  count(*) > 1
select player.country , count(*) from player  group by player.country having  count(*) > 1
select club.name from club where  club.club_id not in (select player.Club_ID from player  )
select club.name from club where  club.club_id not in (select player.Club_ID from player  )
select player.country from player where  player.earnings > 1400000   intersect select player.country from player where  player.earnings < 1100000
select player.country from player where  player.earnings > 1400000   intersect select player.country from player where  player.earnings < 1100000
select count( distinct player.country) from player
select count( distinct player.country) from player
select player.earnings from player where  player.country = "Australia" or player.country = "Zimbabwe"
select player.earnings from player where  player.country = "Australia" or player.country = "Zimbabwe"
select customers.customer_id , customers.customer_first_name , customers.customer_last_name from Orders join Customers on Orders.customer_id = Customers.customer_id  group by orders.customer_id having  count(*) > 2  intersect select customers.customer_id , customers.customer_first_name , customers.customer_last_name from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Customers on Orders.customer_id = Customers.customer_id  group by customers.customer_id  having  count(*) >= 3
select customers.customer_id , customers.customer_first_name , customers.customer_last_name from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Customers on Orders.customer_id = Customers.customer_id  group by orders.customer_id having  count(*) > 2  intersect select customers.customer_id , customers.customer_first_name , customers.customer_last_name from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Customers on Orders.customer_id = Customers.customer_id  group by customers.customer_id  having  count(*) >= 3
select orders.order_id , orders.order_status_code , count(*) from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.order_id
select count(*) , orders.order_status_code , orders.order_id from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.order_status_code
select orders.date_order_placed from Orders where  orders.date_order_placed = (select max(orders.date_order_placed) from Orders  )   union select orders.date_order_placed from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.date_order_placed having  count(*) > 1
select orders.date_order_placed , orders.date_order_placed from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.date_order_placed having  count(*) > 1
select customers.customer_first_name , customers.customer_middle_initial , customers.customer_last_name from Customers   except select customers.customer_first_name , customers.customer_middle_initial , customers.customer_last_name from Orders join Customers on Orders.customer_id = Customers.customer_id
select customers.customer_first_name , customers.customer_last_name , customers.customer_middle_initial from Customers   except select customers.customer_first_name , customers.customer_last_name , customers.customer_middle_initial from Orders join Customers on Orders.customer_id = Customers.customer_id
select products.product_id , products.product_name , products.product_price , products.product_color from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id having  count(*) >= 2
select products.product_id , products.product_name , products.product_price , products.product_color from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id having  count(*) < 2
select orders.order_id , orders.date_order_placed from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.order_id having  count(*) >= 2
select orders.order_id , orders.date_order_placed from Order_Items join Orders on Order_Items.order_id = Orders.order_id  group by orders.order_id having  count(*) >= 2
select order_items.product_id , products.product_name , products.product_price from Order_Items join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id  order by count(*) desc limit 1
select products.product_id , products.product_name , products.product_price from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id  order by count(*) desc limit 1
select orders.order_id , sum(products.product_price) from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Products on Order_Items.product_id = Products.product_id  group by orders.order_id  order by sum(products.product_price) asc limit 1
select orders.order_id , sum(orders.order_id) from Orders  group by orders.order_id  order by sum(orders.order_id) asc limit 1
select customer_payment_methods.payment_method_code from Customer_Payment_Methods  group by customer_payment_methods.payment_method_code  order by count(*) desc limit 1
select customer_payment_methods.payment_method_code from Customer_Payment_Methods  group by customer_payment_methods.payment_method_code  order by count(*) desc limit 1
select customers.gender_code , count(*) from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id  group by customers.gender_code
select customers.gender_code , count(*) from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id  group by customers.gender_code
select customers.gender_code , count(*) from Orders join Customers on Orders.customer_id = Customers.customer_id  group by customers.gender_code
select customers.gender_code , count(*) from Orders join Customers on Orders.customer_id = Customers.customer_id  group by customers.gender_code
select customers.customer_first_name , customers.customer_middle_initial , customers.customer_last_name , customer_payment_methods.payment_method_code from Customer_Payment_Methods join Customers on Customer_Payment_Methods.customer_id = Customers.customer_id
select customers.customer_first_name , customers.customer_middle_initial , customers.customer_last_name , customer_payment_methods.payment_method_code from Customer_Payment_Methods join Customers on Customer_Payment_Methods.customer_id = Customers.customer_id
select invoices.invoice_status_code , invoices.invoice_date , shipments.shipment_date from Shipments join Invoices on Shipments.invoice_number = Invoices.invoice_number
select invoices.invoice_status_code , invoices.invoice_date , shipments.shipment_date from Shipments join Invoices on Shipments.invoice_number = Invoices.invoice_number
select products.product_name , shipments.shipment_date from Order_Items join Products on Order_Items.product_id = Products.product_id join Shipment_Items on Order_Items.order_item_id = Shipment_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select products.product_name , shipments.shipment_date from Order_Items join Products on Order_Items.product_id = Products.product_id join Shipment_Items on Order_Items.order_item_id = Shipment_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select order_items.order_item_status_code , shipments.shipment_tracking_number from Shipment_Items join Order_Items on Shipment_Items.order_item_id = Order_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select order_items.order_item_status_code , shipments.shipment_tracking_number from Shipment_Items join Order_Items on Shipment_Items.order_item_id = Order_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id   union select order_items.order_item_status_code , shipments.shipment_tracking_number from Shipment_Items join Order_Items on Shipment_Items.order_item_id = Order_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select products.product_name , products.product_color from Order_Items join Products on Order_Items.product_id = Products.product_id join Shipment_Items on Order_Items.order_item_id = Shipment_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select products.product_name , products.product_color from Order_Items join Products on Order_Items.product_id = Products.product_id join Shipment_Items on Order_Items.order_item_id = Shipment_Items.order_item_id join Shipments on Shipment_Items.shipment_id = Shipments.shipment_id
select distinct products.product_name , products.product_price , products.product_description from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id where  customers.gender_code = "Female"
select distinct products.product_name , products.product_price , products.product_description from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id where  customers.gender_code = "Female"
select invoices.invoice_status_code from Invoices where  invoices.invoice_number not in (select Shipments.invoice_number from Shipments  )
select invoices.invoice_status_code from Invoices where  invoices.invoice_number not in (select Shipments.invoice_number from Shipments  )
select orders.order_id , orders.date_order_placed , sum(orders.date_order_placed) from Orders  group by orders.order_id
select orders.order_id , orders.date_order_placed , sum(invoices.invoice_status_code) from Shipments join Orders on Shipments.order_id = Orders.order_id join Invoices on Shipments.invoice_number = Invoices.invoice_number  group by orders.order_id
select count( distinct orders.customer_id) from Orders
select count( distinct orders.customer_id) from Orders
select count( distinct order_items.order_item_status_code) from Order_Items
select count( distinct order_items.order_item_status_code) from Order_Items
select count( distinct customer_payment_methods.payment_method_code) from Customer_Payment_Methods
select count( distinct customer_payment_methods.payment_method_code) from Customer_Payment_Methods
select customers.login_name , customers.login_password from Customers where  customers.phone_number like "%12%"
select customers.login_password , customers.login_password from Customers where  customers.phone_number like "+12%"
select products.product_size from Products where  products.product_name like "%Dell%"
select products.product_size from Products where  products.product_name like "%Dell%"
select products.product_price , products.product_size from Products where  products.product_price > (select avg(products.product_price) from Products  )
select products.product_price , products.product_size from Products where  products.product_price > (select avg(products.product_price) from Products  )
select count(*) from Shipment_Items join Order_Items on Shipment_Items.order_item_id = Order_Items.order_item_id join Products on Order_Items.product_id = Products.product_id where  shipment_items.shipment_id not in (select Shipments.shipment_id from Shipments  )
select count(*) from Products where  products.product_id not in (select Order_Items.product_id from Order_Items  )
select count(*) from Customers where  customers.customer_id not in (select Customer_Payment_Methods.customer_id from Customer_Payment_Methods  )
select count(*) from Customers where  customers.customer_id not in (select Customer_Payment_Methods.customer_id from Customer_Payment_Methods  )
select orders.order_status_code , orders.date_order_placed from Orders
select orders.order_status_code , orders.date_order_placed from Orders
select customers.address_line_1 , customers.town_city , customers.county from Customers where  customers.country = "USA"
select customers.address_line_1 , customers.town_city , customers.county from Customers where  customers.country = "USA"
select customers.customer_first_name , products.product_name from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id
select customers.customer_first_name , products.product_name from Orders join Customers on Orders.customer_id = Customers.customer_id join Order_Items on Orders.order_id = Order_Items.order_id join Products on Order_Items.product_id = Products.product_id
select count(*) from Shipments
select count( distinct products.product_id) from Products
select avg(products.product_price) from Products
select avg(products.product_price) from Products
select avg(products.product_price) from Order_Items join Orders on Order_Items.order_id = Orders.order_id join Products on Order_Items.product_id = Products.product_id
select avg(products.product_price) from Products
select customers.email_address , customers.town_city , customers.county from Customers  group by customers.gender_code  order by count(*) asc limit 1
select customers.email_address , customers.town_city , customers.county from Customers where  customers.gender_code = (select customers.gender_code from Customers join Orders on Customers.customer_id = Orders.customer_id  group by customers.gender_code  order by count(*) asc limit 1 )
select orders.date_order_placed from Customer_Payment_Methods join Customers on Customer_Payment_Methods.customer_id = Customers.customer_id join Orders on Customers.customer_id = Orders.customer_id  group by customer_payment_methods.customer_id having  count(*) >= 2
select orders.date_order_placed from Customer_Payment_Methods join Customers on Customer_Payment_Methods.customer_id = Customers.customer_id join Orders on Customers.customer_id = Orders.customer_id  group by customer_payment_methods.customer_id having  count(*) >= 2
select orders.order_status_code from Orders  group by orders.order_status_code  order by count(*) desc limit 1
select orders.order_status_code from Orders  group by orders.order_status_code  order by count(*) asc limit 1
select products.product_id , products.product_description from Order_Items join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id having  count(*) > 3
select order_items.product_id , products.product_description from Order_Items join Products on Order_Items.product_id = Products.product_id  group by order_items.product_id having  count(*) > 3
select invoices.invoice_date , invoices.invoice_number from Shipments join Invoices on Shipments.invoice_number = Invoices.invoice_number  group by shipments.invoice_number having  count(*) >= 2
select invoices.invoice_date , shipments.invoice_number from Shipments join Invoices on Shipments.invoice_number = Invoices.invoice_number  group by shipments.invoice_number having  count(*) >= 2
select shipments.shipment_tracking_number , shipments.shipment_date from Shipments
select shipments.shipment_tracking_number , shipments.shipment_date from Shipments
select products.product_color , products.product_description , products.product_size from Products where  products.product_price < (select max(products.product_price) from Products  )
select products.product_color , products.product_description , products.product_size from Products where  products.product_price != (select max(products.product_price) from Products  )
select director.name from director where  director.age > (select avg(director.age) from director  )
select director.name from director   order by director.age desc limit 1
select count(*) from channel where  channel.internet like "%bbc%"
select count( distinct channel.digital_terrestrial_channel) from channel
select program.title from program   order by program.start_year desc
select director.name from program join director on program.Director_ID = director.Director_ID  group by program.director_id  order by count(*) desc limit 1
select director.name , director.age from program join director on program.Director_ID = director.Director_ID  group by program.director_id  order by count(*) desc limit 1
select program.title from program   order by program.start_year desc limit 1
select channel.name , channel.internet from program join channel on program.Channel_ID = channel.Channel_ID  group by program.channel_id having  count(*) > 1
select count(*) , channel.name from program join channel on program.Channel_ID = channel.Channel_ID  group by program.channel_id
select count(*) from channel where  channel.channel_id not in (select program.Channel_ID from program  )
select director.name from program join director on program.Director_ID = director.Director_ID where  program.title = "Dracula"
select channel.name , channel.internet from director_admin join channel on director_admin.Channel_ID = channel.Channel_ID  group by director_admin.channel_id  order by count(*) desc limit 1
select director.name from director where  director.age between 30 and 60
select channel.name from program join channel on program.Channel_ID = channel.Channel_ID join director on program.Director_ID = director.Director_ID where  director.age < 40   intersect select channel.name from program join channel on program.Channel_ID = channel.Channel_ID join director on program.Director_ID = director.Director_ID where  director.age > 60
select channel.channel_id , channel.name from program join channel on program.Channel_ID = channel.Channel_ID join director on program.Director_ID = director.Director_ID where  director.name != "Hank Baskett"
select count(*) from radio
select radio.transmitter from radio   order by radio.erp_kw asc
select tv_show.tv_show_name , tv_show.original_airdate from tv_show
select city_channel.station_name from city_channel where  city_channel.affiliation != "ABC"
select radio.transmitter from radio where  radio.erp_kw > 150 or radio.erp_kw < 30
select radio.transmitter from radio   order by radio.erp_kw desc limit 1
select avg(radio.erp_kw) from radio
select city_channel.affiliation , count(*) from city_channel  group by city_channel.affiliation
select city_channel.affiliation from city_channel  group by city_channel.affiliation  order by count(*) desc limit 1
select city_channel.affiliation from city_channel  group by city_channel.affiliation having  count(*) > 3
select city_channel.city , city_channel.station_name from city_channel   order by city_channel.station_name asc
select radio.transmitter , city_channel.city from city_channel_radio join radio on city_channel_radio.Radio_ID = radio.Radio_ID join city_channel on city_channel_radio.City_channel_ID = city_channel.ID
select radio.transmitter , city_channel.station_name from city_channel_radio join radio on city_channel_radio.Radio_ID = radio.Radio_ID join city_channel on city_channel_radio.City_channel_ID = city_channel.ID   order by radio.erp_kw desc
select radio.transmitter , count(*) from city_channel_radio join radio on city_channel_radio.Radio_ID = radio.Radio_ID  group by radio.transmitter
select distinct radio.transmitter from radio where  radio.radio_id not in (select city_channel_radio.Radio_ID from city_channel_radio  )
select vehicle.model from vehicle where  vehicle.top_speed > 6000 and vehicle.power > 6000
select vehicle.model from vehicle where  vehicle.power > 6000   order by vehicle.top_speed desc limit 1
select driver.name from driver where  driver.citizenship = "United States"
select driver.name from driver where  driver.citizenship = "United States"
select vehicle_driver.driver_id , count(*) from vehicle_driver  group by vehicle_driver.driver_id  order by count(*) desc limit 1
select driver.driver_id , count(*) from vehicle_driver join driver on vehicle_driver.Driver_ID = driver.Driver_ID  group by driver.driver_id  order by count(*) desc limit 1
select max(vehicle.power) , avg(vehicle.power) from vehicle where  vehicle.builder = "Zhuzhou"
select max(vehicle.power) , avg(vehicle.power) from vehicle where  vehicle.builder = "Zhuzhou"
select vehicle_driver.vehicle_id from vehicle_driver  group by vehicle_driver.vehicle_id  order by count(*) asc limit 1
select vehicle.vehicle_id from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID  group by vehicle.vehicle_id  order by count(*) asc limit 1
select vehicle.top_speed , vehicle.power from vehicle where  vehicle.build_year = 1996
select vehicle.top_speed , vehicle.power from vehicle where  vehicle.build_year = 1996
select vehicle.build_year , vehicle.model , vehicle.builder from vehicle
select vehicle.build_year , vehicle.model , vehicle.builder from vehicle
select count(*) from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID where  vehicle.build_year = 2012
select count( distinct vehicle_driver.driver_id) from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID where  vehicle.build_year = 2012
select count(*) from driver where  driver.racing_series = "NASCAR"
select count(*) from driver where  driver.racing_series = "NASCAR"
select avg(vehicle.top_speed) from vehicle
select avg(vehicle.top_speed) from vehicle
select distinct driver.name from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  vehicle.power > 5000
select driver.name from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  vehicle.power > 5000
select vehicle.model from vehicle where  vehicle.total_production > 100 or vehicle.top_speed > 150
select vehicle.model from vehicle where  vehicle.total_production > 100 or vehicle.top_speed > 150
select vehicle.model , vehicle.build_year from vehicle where  vehicle.model like "%DJ%"
select vehicle.model , vehicle.build_year from vehicle where  vehicle.model like "%DJ%"
select vehicle.model from vehicle where  vehicle.vehicle_id not in (select vehicle_driver.Vehicle_ID from vehicle_driver  )
select vehicle.model from vehicle where  vehicle.vehicle_id not in (select vehicle_driver.Vehicle_ID from vehicle_driver  )
select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID  group by vehicle.vehicle_id having  count(*) = 2  union select vehicle.vehicle_id , vehicle.model from vehicle where  vehicle.builder = "Ziyang"
select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID  group by vehicle.vehicle_id having  count(*) = 2  union select vehicle.vehicle_id , vehicle.model from vehicle where  vehicle.builder = "Ziyang"
select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID  group by vehicle.vehicle_id having  count(*) > 2  union select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  driver.name = "Jeff Gordon"
select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID  group by vehicle.vehicle_id having  count(*) > 2  union select vehicle.vehicle_id , vehicle.model from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  driver.name = "Jeff Gordon"
select count(*) from vehicle
select count(*) from vehicle where  vehicle.top_speed = (select max(vehicle.top_speed) from vehicle  )
select driver.name from driver   order by driver.name asc
select driver.name from driver   order by driver.name asc
select driver.racing_series , count(*) from driver  group by driver.racing_series
select count(*) , driver.racing_series from driver  group by driver.racing_series
select driver.name , driver.citizenship from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  vehicle.model = "DJ1"
select driver.name , driver.citizenship from vehicle_driver join vehicle on vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID join driver on vehicle_driver.Driver_ID = driver.Driver_ID where  vehicle.model = "DJ1"
select count(*) from driver where  driver.driver_id not in (select vehicle_driver.Driver_ID from vehicle_driver  )
select count(*) from driver where  driver.driver_id not in (select vehicle_driver.Driver_ID from vehicle_driver  )
select count(*) from Exams
select count(*) from Exams
select distinct exams.subject_code from Exams   order by exams.subject_code asc
select distinct exams.subject_code from Exams   order by exams.subject_code asc
select exams.exam_name , exams.exam_date from Exams where  exams.subject_code != "Database"
select exams.exam_date , exams.exam_name from Exams where  exams.subject_code != "Database"
select exams.exam_date from Exams where  exams.subject_code like "%data%"   order by exams.exam_date desc
select exams.exam_date from Exams where  exams.subject_code like "%data%"   order by exams.exam_date desc
select questions.type_of_question_code , count(*) from Questions  group by questions.type_of_question_code
select questions.type_of_question_code , count(*) from Questions  group by questions.type_of_question_code
select distinct student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Normal"
select distinct student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Normal"
select count( distinct student_answers.comments) from Student_Answers
select count( distinct student_answers.comments) from Student_Answers
select student_answers.student_answer_text from Student_Answers  group by student_answers.student_answer_text  order by count(*) desc
select student_answers.student_answer_text from Student_Answers  group by student_answers.student_answer_text  order by count(*) desc
select students.first_name , student_answers.date_of_answer from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID
select students.first_name , student_answers.date_of_answer from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID
select students.email_adress , student_answers.date_of_answer from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID   order by student_answers.date_of_answer desc
select students.email_adress , student_answers.date_of_answer from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID   order by student_answers.date_of_answer desc
select student_assessments.assessment from Student_Assessments  group by student_assessments.assessment  order by count(*) asc limit 1
select student_assessments.assessment from Student_Assessments  group by student_assessments.assessment  order by count(*) asc limit 1
select students.first_name from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID  group by student_answers.student_id having  count(*) >= 2
select students.first_name from Student_Answers join Students on Student_Answers.Student_ID = Students.Student_ID  group by student_answers.student_id having  count(*) >= 2
select valid_answers.valid_answer_text from Valid_Answers  group by valid_answers.valid_answer_text  order by count(*) desc limit 1
select valid_answers.valid_answer_text from Valid_Answers  group by valid_answers.valid_answer_text  order by count(*) desc limit 1
select students.last_name from Students where  students.gender_mfu != "M"
select students.last_name from Students where  students.gender_mfu != "M"
select students.gender_mfu , count(*) from Students  group by students.gender_mfu
select students.gender_mfu , count(*) from Students  group by students.gender_mfu
select students.last_name from Students where  students.gender_mfu = "F" or students.gender_mfu = "M"
select students.last_name from Students where  students.gender_mfu = "F" or students.gender_mfu = "M"
select students.first_name from Students where  students.student_id not in (select Student_Answers.Student_ID from Student_Answers  )
select students.first_name from Students where  students.student_id not in (select Student_Answers.Student_ID from Student_Answers  )
select student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Normal"   intersect select student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Absent"
select student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Normal"   intersect select student_answers.student_answer_text from Student_Answers where  student_answers.comments = "Absent"
select questions.type_of_question_code from Questions  group by questions.type_of_question_code having  count(*) >= 3
select questions.type_of_question_code from Questions  group by questions.type_of_question_code having  count(*) >= 3
select * from Students
select * from Students
select count(*) from Addresses
select count(*) from Addresses
select addresses.address_id , addresses.address_details from Addresses
select addresses.address_id , addresses.address_details from Addresses
select count(*) from Products
select count(*) from Products
select products.product_id , products.product_type_code , products.product_name from Products
select products.product_id , products.product_type_code , products.product_name from Products
select products.product_price from Products where  products.product_name = "Monitor"
select products.product_price from Products where  products.product_name = "Monitor"
select min(products.product_price) , avg(products.product_price) , max(products.product_price) from Products
select min(products.product_price) , avg(products.product_price) , max(products.product_price) from Products
select avg(products.product_price) from Products where  products.product_type_code = "Clothes"
select avg(products.product_price) from Products where  products.product_type_code = "Clothes"
select count(*) from Products where  products.product_type_code = "Hardware"
select count(*) from Products where  products.product_type_code = "Hardware"
select products.product_name from Products where  products.product_price > (select avg(products.product_price) from Products  )
select products.product_name from Products where  products.product_price > (select avg(products.product_price) from Products  )
select products.product_name from Products where  products.product_price > (select avg(products.product_price) from Products where  products.product_type_code = "Hardware"  )
select products.product_name from Products where  products.product_price > (select avg(products.product_price) from Products where  products.product_type_code = "Hardware"  )
select products.product_name from Products where  products.product_type_code = "Clothes"   order by products.product_price desc limit 1
select products.product_name from Products where  products.product_type_code = "Clothes"   order by products.product_price desc limit 1
select products.product_id , products.product_name from Products where  products.product_type_code = "Hardware"   order by products.product_price asc limit 1
select products.product_id , products.product_name from Products where  products.product_type_code = "Hardware"   order by products.product_price asc limit 1
select products.product_name from Products   order by products.product_price desc
select products.product_name from Products   order by products.product_price desc
select products.product_price from Products where  products.product_type_code = "Hardware"   order by products.product_price asc
select products.product_name from Products where  products.product_type_code = "Hardware"   order by products.product_price asc
select products.product_type_code , count(*) from Products  group by products.product_type_code
select products.product_type_code , count(*) from Products  group by products.product_type_code
select products.product_type_code , avg(products.product_price) from Products  group by products.product_type_code
select products.product_type_code , avg(products.product_price) from Products  group by products.product_type_code
select products.product_type_code from Products  group by products.product_type_code having  count(*) >= 2
select products.product_type_code from Products  group by products.product_type_code having  count(*) >= 2
select products.product_type_code from Products  group by products.product_type_code  order by count(*) desc limit 1
select products.product_type_code from Products  group by products.product_type_code  order by count(*) desc limit 1
select count(*) from Customers
select count(*) from Customers
select customers.customer_id , customers.customer_name from Customers
select customers.customer_id , customers.customer_name from Customers
select customers.customer_address , customers.customer_phone , customers.customer_email from Customers where  customers.customer_name = "Jeromy"
select customers.customer_address , customers.customer_phone , customers.customer_email from Customers where  customers.customer_name = "Jeromy"
select customers.payment_method_code , count(*) from Customers  group by customers.payment_method_code
select customers.payment_method_code , count(*) from Customers  group by customers.payment_method_code
select customers.payment_method_code from Customers  group by customers.payment_method_code  order by count(*) desc limit 1
select customers.payment_method_code from Customers  group by customers.payment_method_code  order by count(*) desc limit 1
select customers.customer_name from Customers  group by customers.payment_method_code  order by count(*) asc limit 1
select customers.customer_name from Customers where  customers.payment_method_code = (select min(customers.payment_method_code) from Customers  )
select customers.payment_method_code , customers.customer_number from Customers where  customers.customer_name = "Jeromy"
select customers.payment_method_code , customers.customer_number from Customers where  customers.customer_name = "Jeromy"
select distinct customers.payment_method_code from Customers
select distinct customers.payment_method_code from Customers
select products.product_id , products.product_type_code from Products   order by products.product_name asc
select products.product_id , products.product_type_code from Products   order by products.product_name asc
select products.product_type_code from Products  group by products.product_type_code  order by count(*) asc limit 1
select products.product_type_code from Products  group by products.product_type_code  order by count(*) asc limit 1
select count(*) from Customer_Orders
select count(*) from Customer_Orders
select customer_orders.order_id , customer_orders.order_date , customer_orders.order_status_code from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id where  customers.customer_name = "Jeromy"
select customer_orders.order_id , customer_orders.order_date , customer_orders.order_status_code from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id where  customers.customer_name = "Jeromy"
select customers.customer_name , customers.customer_id , count(*) from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id  group by customer_orders.customer_id
select customers.customer_name , customer_orders.customer_id , count(*) from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id  group by customer_orders.customer_id
select customers.customer_id , customers.customer_name , customers.customer_phone , customers.customer_email from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id  group by customer_orders.customer_id  order by count(*) desc limit 1
select customer_orders.customer_id , customers.customer_name , customers.customer_phone , customers.customer_email from Customer_Orders join Customers on Customer_Orders.customer_id = Customers.customer_id  group by customer_orders.customer_id  order by count(*) desc limit 1
select customer_orders.order_status_code , count(*) from Customer_Orders  group by customer_orders.order_status_code
select customer_orders.order_status_code , count(*) from Customer_Orders  group by customer_orders.order_status_code
select customer_orders.order_status_code from Customer_Orders  group by customer_orders.order_status_code  order by count(*) desc limit 1
select customer_orders.order_status_code from Customer_Orders  group by customer_orders.order_status_code  order by count(*) desc limit 1
select count(*) from Customers where  customers.customer_id not in (select Customer_Orders.customer_id from Customer_Orders  )
select count(*) from Customers where  customers.customer_id not in (select Customer_Orders.customer_id from Customer_Orders  )
select products.product_name from Products   except select products.product_name from Order_Items join Products on Order_Items.product_id = Products.product_id
select products.product_name from Products   except select products.product_name from Order_Items join Products on Order_Items.product_id = Products.product_id join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id
select count(*) from Order_Items join Products on Order_Items.product_id = Products.product_id where  products.product_name = "Monitor"
select sum(order_items.order_quantity) from Order_Items join Products on Order_Items.product_id = Products.product_id where  products.product_name = "Monitor"
select count(*) from Order_Items join Products on Order_Items.product_id = Products.product_id join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id where  products.product_name = "Monitor"
select count( distinct customers.customer_id) from Order_Items join Products on Order_Items.product_id = Products.product_id join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id join Customers on Customer_Orders.customer_id = Customers.customer_id where  products.product_name = "Monitor"
select count( distinct customer_orders.customer_id) from Customer_Orders
select count( distinct customer_orders.customer_id) from Customer_Orders
select customers.customer_id from Customers   except select customer_orders.customer_id from Customer_Orders
select customers.customer_id from Customers   except select customer_orders.customer_id from Customer_Orders
select customer_orders.order_date , customer_orders.order_id from Order_Items join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id  group by customer_orders.order_id having  sum(order_items.order_quantity) > 6  union select customer_orders.order_date , customer_orders.order_id from Order_Items join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id  group by customer_orders.order_id having  count(*) > 3
select customer_orders.order_id , customer_orders.order_date from Order_Items join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id where  order_items.order_quantity > 6   union select customer_orders.order_id , customer_orders.order_date from Order_Items join Customer_Orders on Order_Items.order_id = Customer_Orders.order_id  group by customer_orders.order_id having  count(*) > 3
select count(*) from building
select count(*) from building
select building.name from building   order by building.number_of_stories asc
select building.name from building   order by building.number_of_stories asc
select building.address from building   order by building.completed_year desc
select building.address from building   order by building.completed_year desc
select max(building.number_of_stories) from building where  building.completed_year != 1980
select max(building.number_of_stories) from building where  building.completed_year != 1980
select avg(region.population) from region
select avg(region.population) from region
select region.name from region   order by region.name asc
select region.name from region   order by region.name asc
select region.capital from region where  region.area > 10000
select region.capital from region where  region.area > 10000
select region.capital from region   order by region.population desc limit 1
select region.capital from region   order by region.population desc limit 1
select region.name from region   order by region.area desc limit 5
select region.name from region   order by region.area desc limit 5
select building.name , region.name from building join region on building.Region_ID = region.Region_ID
select building.name , region.name from building join region on building.Region_ID = region.Region_ID
select region.name from building join region on building.Region_ID = region.Region_ID  group by building.region_id having  count(*) > 1
select region.name from building join region on building.Region_ID = region.Region_ID  group by building.region_id having  count(*) > 1
select region.capital from building join region on building.Region_ID = region.Region_ID  group by building.region_id  order by count(*) desc limit 1
select region.capital from building join region on building.Region_ID = region.Region_ID  group by building.region_id  order by count(*) desc limit 1
select building.address , region.capital from building join region on building.Region_ID = region.Region_ID
select building.address , region.name from building join region on building.Region_ID = region.Region_ID
select building.number_of_stories from building join region on building.Region_ID = region.Region_ID where  region.name = "Abruzzo"
select building.number_of_stories from building join region on building.Region_ID = region.Region_ID where  region.name = "Abruzzo"
select building.completed_year , count(*) from building  group by building.completed_year
select building.completed_year , count(*) from building  group by building.completed_year
select building.completed_year from building  group by building.completed_year  order by count(*) desc limit 1
select building.completed_year from building  group by building.completed_year  order by count(*) desc limit 1
select region.name from region where  region.region_id not in (select building.Region_ID from building  )
select region.name from region where  region.region_id not in (select building.Region_ID from building  )
select building.completed_year from building where  building.number_of_stories > 20   intersect select building.completed_year from building where  building.number_of_stories < 15
select building.completed_year from building where  building.number_of_stories > 20   intersect select building.completed_year from building where  building.number_of_stories < 15
select distinct building.address from building
select distinct building.address from building
select building.completed_year from building   order by building.number_of_stories desc
select building.completed_year from building   order by building.number_of_stories desc
select channels.channel_details from Channels   order by channels.channel_details asc
select channels.channel_details from Channels   order by channels.channel_details asc
select count(*) from Services
select count(*) from Services
select analytical_layer.analytical_layer_type_code from Analytical_Layer  group by analytical_layer.analytical_layer_type_code  order by count(*) desc limit 1
select analytical_layer.analytical_layer_type_code from Analytical_Layer  group by analytical_layer.analytical_layer_type_code  order by count(*) desc limit 1
select services.service_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID join Services on Customers_and_Services.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch"
select services.service_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID join Services on Customers_and_Services.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch"
select services.service_details from Customers_and_Services join Services on Customers_and_Services.Service_ID = Services.Service_ID  group by customers_and_services.service_id having  count(*) > 3
select services.service_details from Customers_and_Services join Services on Customers_and_Services.Service_ID = Services.Service_ID  group by customers_and_services.service_id having  count(*) > 3
select customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID  group by customers.customer_details  order by count(*) desc limit 1
select customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID  group by customers.customer_details  order by count(*) desc limit 1
select customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID  group by customers.customer_details  order by count(*) desc limit 1
select customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID  group by customers.customer_details  order by count(*) desc limit 1
select customers.customer_details from Customers   except select customers_and_services.customers_and_services_details from Customers_and_Services
select customers.customer_details from Customers   except select customers_and_services.customers_and_services_details from Customers_and_Services
select customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID  group by customers.customer_details  order by count(*) asc limit 1
select distinct customers.customer_details from Customers_and_Services join Customers on Customers_and_Services.Customer_ID = Customers.Customer_ID where  customers_and_services.service_id = (select min(Customers_and_Services.Service_ID) from Customers_and_Services  )
select count( distinct customers_and_services.customers_and_services_details) from Customers_and_Services
select count(*) from Customers_and_Services
select customers.customer_details from Customers where  customers.customer_details like "%Kutch%"
select customers.customer_details from Customers where  customers.customer_details like "%Kutch%"
select services.service_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch" or customer_interactions.services_and_channels_details = "good"
select services.service_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch" or customer_interactions.services_and_channels_details = "good"
select services.service_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch" and customer_interactions.services_and_channels_details = "bad"
select services.service_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  customers.customer_details = "Hardy Kutch" and customer_interactions.services_and_channels_details = "bad"
select services.service_details from Customer_Interactions join Channels on Customer_Interactions.Channel_ID = Channels.Channel_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  channels.channel_details > "" and customer_interactions.channel_id <= ""
select services.service_details from Customer_Interactions join Channels on Customer_Interactions.Channel_ID = Channels.Channel_ID join Services on Customer_Interactions.Service_ID = Services.Service_ID where  channels.channel_details = "15 ij"
select customers.customer_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID where  customer_interactions.status_code = "Stuck" and customer_interactions.services_and_channels_details = "bad"
select customers.customer_details from Customer_Interactions join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID where  customer_interactions.status_code = "Stuck" and customer_interactions.services_and_channels_details = "bad"
select count(*) from Integration_Platform where  integration_platform.integration_platform_details = "Success"
select count(*) from Integration_Platform where  integration_platform.integration_platform_details = "Success"
select customers.customer_details from Integration_Platform join Customer_Interactions on Integration_Platform.Customer_Interaction_ID = Customer_Interactions.Customer_Interaction_ID join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID where  integration_platform.integration_platform_details = "Failed"
select distinct customers.customer_details from Integration_Platform join Customer_Interactions on Integration_Platform.Customer_Interaction_ID = Customer_Interactions.Customer_Interaction_ID join Customers on Customer_Interactions.Customer_ID = Customers.Customer_ID where  integration_platform.integration_platform_details = "Fail"
select services.service_details from Services   except select customers_and_services.customers_and_services_details from Customers_and_Services
select services.service_details from Services   except select customers_and_services.customers_and_services_details from Customers_and_Services
select analytical_layer.analytical_layer_type_code , count(*) from Analytical_Layer  group by analytical_layer.analytical_layer_type_code
select analytical_layer.analytical_layer_type_code , count(*) from Analytical_Layer  group by analytical_layer.analytical_layer_type_code
select services.service_details from Customers_and_Services join Services on Customers_and_Services.Service_ID = Services.Service_ID where  customers_and_services.customers_and_services_details = "Unsatisfied"
select services.service_details from Customers_and_Services join Services on Customers_and_Services.Service_ID = Services.Service_ID where  customers_and_services.customers_and_services_details = "Unsatisfied"
select count(*) from Vehicles
select count(*) from Vehicles
select vehicles.name from Vehicles   order by vehicles.model_year desc
select vehicles.name from Vehicles   order by vehicles.model_year desc
select distinct vehicles.type_of_powertrain from Vehicles
select distinct vehicles.type_of_powertrain from Vehicles
select vehicles.name , vehicles.type_of_powertrain , vehicles.annual_fuel_cost from Vehicles where  vehicles.model_year = 2013 or vehicles.model_year = 2014
select vehicles.name , vehicles.type_of_powertrain , vehicles.annual_fuel_cost from Vehicles where  vehicles.model_year = 2013 or vehicles.model_year = 2014
select vehicles.type_of_powertrain from Vehicles where  vehicles.model_year = 2014   intersect select vehicles.type_of_powertrain from Vehicles where  vehicles.model_year = 2013
select vehicles.type_of_powertrain from Vehicles where  vehicles.model_year = 2013   intersect select vehicles.type_of_powertrain from Vehicles where  vehicles.model_year = 2014
select vehicles.type_of_powertrain , count(*) from Vehicles  group by vehicles.type_of_powertrain
select vehicles.type_of_powertrain , count(*) from Vehicles  group by vehicles.type_of_powertrain
select vehicles.type_of_powertrain from Vehicles  group by vehicles.type_of_powertrain  order by count(*) desc limit 1
select vehicles.type_of_powertrain from Vehicles  group by vehicles.type_of_powertrain  order by count(*) desc limit 1
select min(vehicles.annual_fuel_cost) , max(vehicles.annual_fuel_cost) , avg(vehicles.annual_fuel_cost) from Vehicles
select min(vehicles.annual_fuel_cost) , max(vehicles.annual_fuel_cost) , avg(vehicles.annual_fuel_cost) from Vehicles
select vehicles.name , vehicles.model_year from Vehicles where  vehicles.city_fuel_economy_rate <= vehicles.highway_fuel_economy_rate
select vehicles.name , vehicles.model_year from Vehicles where  vehicles.city_fuel_economy_rate < (select max(vehicles.highway_fuel_economy_rate) from Vehicles  )
select vehicles.type_of_powertrain , avg(vehicles.annual_fuel_cost) from Vehicles  group by vehicles.type_of_powertrain having  count(*) >= 2
select vehicles.type_of_powertrain , avg(vehicles.annual_fuel_cost) from Vehicles  group by vehicles.type_of_powertrain having  count(*) >= 2
select customers.name , customers.age , customers.membership_credit from Customers
select customers.name , customers.age , customers.membership_credit from Customers
select customers.name , customers.age from Customers   order by customers.membership_credit desc limit 1
select customers.name , customers.age from Customers  group by customers.name  order by sum(customers.membership_credit) desc limit 1
select avg(customers.age) from Customers where  customers.membership_credit > (select avg(customers.membership_credit) from Customers  )
select avg(customers.age) from Customers where  customers.age > (select avg(customers.age) from Customers  )
select * from Discount
select * from Discount
select vehicles.name , sum(renting_history.total_hours) from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id  group by vehicles.id
select vehicles.name , sum(renting_history.total_hours) from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id  group by vehicles.id
select vehicles.name from Vehicles where  vehicles.id not in (select Renting_history.vehicles_id from Renting_history  )
select vehicles.name from Vehicles where  vehicles.id not in (select Renting_history.vehicles_id from Renting_history  )
select customers.name from Renting_history join Customers on Renting_history.customer_id = Customers.id  group by renting_history.customer_id having  count(*) >= 2
select customers.name from Renting_history join Customers on Renting_history.customer_id = Customers.id  group by renting_history.customer_id having  count(*) >= 2
select vehicles.name , vehicles.model_year from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id  group by renting_history.vehicles_id  order by count(*) desc limit 1
select vehicles.name , vehicles.model_year from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id  group by renting_history.vehicles_id  order by count(*) desc limit 1
select vehicles.name from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id   order by renting_history.total_hours desc
select vehicles.name from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id   order by renting_history.total_hours desc
select discount.name from Renting_history join Discount on Renting_history.discount_id = Discount.id  group by renting_history.discount_id  order by count(*) desc limit 1
select discount.name from Renting_history join Discount on Renting_history.discount_id = Discount.id  group by renting_history.discount_id  order by count(*) desc limit 1
select vehicles.name , vehicles.type_of_powertrain from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id where  renting_history.total_hours > 30
select vehicles.name , vehicles.type_of_powertrain from Renting_history join Vehicles on Renting_history.vehicles_id = Vehicles.id where  renting_history.total_hours > 30
select vehicles.type_of_powertrain , avg(vehicles.city_fuel_economy_rate) , avg(vehicles.highway_fuel_economy_rate) from Vehicles  group by vehicles.type_of_powertrain
select avg(vehicles.city_fuel_economy_rate) , avg(vehicles.highway_fuel_economy_rate) , vehicles.type_of_powertrain from Vehicles  group by vehicles.type_of_powertrain
select avg(student_loans.amount_of_loan) from Student_Loans
select avg(student_loans.amount_of_loan) from Student_Loans
select students.bio_data , detention.student_id from Classes join Students on Classes.student_id = Students.student_id join Detention on Students.student_id = Detention.student_id  group by detention.student_id having  count(*) >= 2  union select students.bio_data , detention.student_id from Detention join Students on Detention.student_id = Students.student_id  group by detention.student_id having  count(*) < 2
select students.bio_data , students.student_id from Classes join Students on Classes.student_id = Students.student_id  group by classes.student_id having  count(*) >= 2  union select students.bio_data , students.student_id from Detention join Students on Detention.student_id = Students.student_id  group by students.bio_data  having  count(*) < 2
select teachers.teacher_details from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id where  classes.class_details like "%data%"   except select teachers.teacher_details from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id where  classes.class_details like "%net%"
select teachers.teacher_details from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id where  classes.class_details like "%data%" and classes.class_details != "%net%"
select students.bio_data from Students   except select students.bio_data from Student_Loans join Students on Student_Loans.student_id = Students.student_id
select students.bio_data from Students   except select students.bio_data from Student_Loans join Students on Student_Loans.student_id = Students.student_id
select student_loans.amount_of_loan , student_loans.date_of_loan from Student_Loans join Students on Student_Loans.student_id = Students.student_id join Achievements on Students.student_id = Achievements.student_id  group by achievements.student_id having  count(*) >= 2
select student_loans.amount_of_loan , student_loans.date_of_loan from Student_Loans join Students on Student_Loans.student_id = Students.student_id join Achievements on Students.student_id = Achievements.student_id  group by achievements.student_id having  count(*) >= 2
select teachers.teacher_details , teachers.teacher_id from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id  group by classes.teacher_id  order by count(*) desc limit 1
select teachers.teacher_details , teachers.teacher_id from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id  group by classes.teacher_id  order by count(*) desc limit 1
select distinct ref_detention_type.detention_type_description from Ref_Detention_Type
select distinct ref_detention_type.detention_type_description from Ref_Detention_Type
select students.student_details , ref_address_types.address_type_description from Students_Addresses join Ref_Address_Types on Students_Addresses.address_type_code = Ref_Address_Types.address_type_code join Students on Students_Addresses.student_id = Students.student_id
select students.student_details , ref_address_types.address_type_description from Students_Addresses join Ref_Address_Types on Students_Addresses.address_type_code = Ref_Address_Types.address_type_code join Students on Students_Addresses.student_id = Students.student_id
select addresses.address_details , students.bio_data from Students_Addresses join Addresses on Students_Addresses.address_id = Addresses.address_id join Students on Students_Addresses.student_id = Students.student_id
select addresses.address_details , students.bio_data from Students_Addresses join Addresses on Students_Addresses.address_id = Addresses.address_id join Students on Students_Addresses.student_id = Students.student_id
select students.bio_data , transcripts.date_of_transcript from Transcripts join Students on Transcripts.student_id = Students.student_id
select students.bio_data , transcripts.date_of_transcript from Transcripts join Students on Transcripts.student_id = Students.student_id
select count(*) , behaviour_monitoring.behaviour_monitoring_details from Behaviour_Monitoring  group by behaviour_monitoring.behaviour_monitoring_details  order by count(*) desc limit 1
select behaviour_monitoring.behaviour_monitoring_details , count(*) from Behaviour_Monitoring  group by behaviour_monitoring.behaviour_monitoring_details  order by count(*) desc limit 1
select students.bio_data , students.student_details from Students where  students.student_details = (select Behaviour_Monitoring.behaviour_monitoring_details from Behaviour_Monitoring  group by Behaviour_Monitoring.behaviour_monitoring_details  order by count(*) desc limit 3 )
select students.bio_data , students.student_details from Behaviour_Monitoring join Students on Behaviour_Monitoring.student_id = Students.student_id where  students.student_id in (select Behaviour_Monitoring.student_id from Behaviour_Monitoring  group by Behaviour_Monitoring.student_id having  count(*) = 3 )   group by behaviour_monitoring.student_id  order by count(*) desc
select students.bio_data from Students where  students.student_details = (select Behaviour_Monitoring.behaviour_monitoring_details from Behaviour_Monitoring  group by Behaviour_Monitoring.behaviour_monitoring_details  order by count(*) desc limit 1 )
select students.bio_data from Behaviour_Monitoring join Students on Behaviour_Monitoring.student_id = Students.student_id  group by behaviour_monitoring.student_id  order by count(*) desc limit 1
select students.bio_data , student_events.event_date from Student_Events join Students on Student_Events.student_id = Students.student_id
select students.bio_data , student_events.event_date from Student_Events join Students on Student_Events.student_id = Students.student_id
select count(*) , student_events.event_type_code , ref_event_types.event_type_description from Student_Events join Ref_Event_Types on Student_Events.event_type_code = Ref_Event_Types.event_type_code  group by student_events.event_type_code  order by count(*) desc limit 1
select student_events.event_type_code , ref_event_types.event_type_description from Student_Events join Ref_Event_Types on Student_Events.event_type_code = Ref_Event_Types.event_type_code  group by student_events.event_type_code  order by count(*) desc limit 1
select achievements.achievement_details , ref_achievement_type.achievement_type_description from Achievements join Ref_Achievement_Type on Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code
select achievements.achievement_details , ref_achievement_type.achievement_type_description from Achievements join Ref_Achievement_Type on Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code
select count(*) from Teachers where  teachers.teacher_details not in (select Achievements.achievement_details from Achievements  )
select count(*) from Classes where  classes.student_id not in (select Achievements.student_id from Achievements  )
select transcripts.date_of_transcript , transcripts.transcript_details from Transcripts
select transcripts.date_of_transcript , transcripts.transcript_details from Transcripts
select achievements.achievement_type_code , achievements.achievement_details , achievements.date_achievement from Achievements
select achievements.achievement_type_code , achievements.achievement_details , achievements.date_achievement from Achievements
select detention.datetime_detention_start , detention.datetime_detention_end from Detention
select detention.datetime_detention_start , detention.datetime_detention_end from Detention
select students.bio_data from Students where  students.student_details like "%Suite%"
select students.bio_data from Students where  students.student_details like "%Suite%"
select teachers.teacher_details from Teachers where  teachers.teacher_details = (select Classes.class_details from Classes  )
select teachers.teacher_details , students.student_details from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id join Students on Classes.student_id = Students.student_id
select count(*) , classes.teacher_id from Classes  group by classes.teacher_id  order by count(*) desc limit 1
select teachers.teacher_id , count(*) from Classes join Teachers on Classes.teacher_id = Teachers.teacher_id  group by teachers.teacher_id  order by count(*) desc limit 1
select count(*) , classes.student_id from Classes  group by classes.student_id  order by count(*) desc limit 1
select students.student_id , count(*) from Students  group by students.student_id  order by count(*) desc limit 1
select students.student_id , students.student_details from Classes join Students on Classes.student_id = Students.student_id  group by classes.student_id having  count(*) = 2
select students.student_id , students.student_details from Classes join Students on Classes.student_id = Students.student_id  group by classes.student_id having  count(*) = 2
select detention.detention_type_code , ref_detention_type.detention_type_description from Detention join Ref_Detention_Type on Detention.detention_type_code = Ref_Detention_Type.detention_type_code  group by detention.detention_type_code  order by count(*) asc limit 1
select detention.detention_type_code , ref_detention_type.detention_type_description from Detention join Ref_Detention_Type on Detention.detention_type_code = Ref_Detention_Type.detention_type_code  group by detention.detention_type_code  order by count(*) asc limit 1
select students.bio_data , students.student_details from Student_Loans join Students on Student_Loans.student_id = Students.student_id where  student_loans.amount_of_loan > (select avg(Student_Loans.amount_of_loan) from Student_Loans  )
select students.bio_data , students.student_details from Student_Loans join Students on Student_Loans.student_id = Students.student_id where  student_loans.amount_of_loan > (select avg(Student_Loans.amount_of_loan) from Student_Loans  )
select student_loans.date_of_loan from Student_Loans   order by student_loans.date_of_loan asc limit 1
select student_loans.date_of_loan from Student_Loans   order by student_loans.date_of_loan asc limit 1
select students.bio_data from Student_Loans join Students on Student_Loans.student_id = Students.student_id   order by student_loans.amount_of_loan asc limit 1
select students.bio_data from Student_Loans join Students on Student_Loans.student_id = Students.student_id   order by student_loans.amount_of_loan asc limit 1
select transcripts.date_of_transcript from Transcripts join Students on Transcripts.student_id = Students.student_id join Student_Loans on Students.student_id = Student_Loans.student_id   order by student_loans.amount_of_loan desc limit 1
select transcripts.date_of_transcript from Transcripts join Students on Transcripts.student_id = Students.student_id join Student_Loans on Students.student_id = Student_Loans.student_id   order by student_loans.amount_of_loan desc limit 1
select teachers.teacher_details from Transcripts join Students on Transcripts.student_id = Students.student_id join Classes on Students.student_id = Classes.student_id join Teachers on Classes.teacher_id = Teachers.teacher_id   order by transcripts.date_of_transcript asc limit 1
select teachers.teacher_details from Transcripts join Students on Transcripts.student_id = Students.student_id join Classes on Students.student_id = Classes.student_id join Teachers on Classes.teacher_id = Teachers.teacher_id   order by transcripts.date_of_transcript asc limit 1
select student_loans.student_id , sum(student_loans.amount_of_loan) from Student_Loans  group by student_loans.student_id
select student_loans.student_id , sum(student_loans.amount_of_loan) from Student_Loans  group by student_loans.student_id
select students.student_id , students.bio_data , count(*) from Classes join Students on Classes.student_id = Students.student_id  group by classes.student_id
select students.student_id , students.bio_data , count(*) from Classes join Students on Classes.student_id = Students.student_id  group by students.student_id
select count( distinct detention.student_id) from Detention
select count( distinct detention.student_id) from Detention
select students_addresses.address_type_code , ref_address_types.address_type_description from Students_Addresses join Ref_Address_Types on Students_Addresses.address_type_code = Ref_Address_Types.address_type_code  group by students_addresses.address_type_code  order by count(*) desc limit 1
select students_addresses.address_type_code , ref_address_types.address_type_description from Students_Addresses join Ref_Address_Types on Students_Addresses.address_type_code = Ref_Address_Types.address_type_code  group by students_addresses.address_type_code  order by count(*) desc limit 1
select students.bio_data from Student_Events join Students on Student_Events.student_id = Students.student_id   except select students.bio_data from Student_Loans join Students on Student_Loans.student_id = Students.student_id
select students.bio_data from Student_Events join Students on Student_Events.student_id = Students.student_id where  students.student_id not in (select Student_Loans.student_id from Student_Loans  )
select detention.datetime_detention_start , detention.datetime_detention_end from Transcripts join Students on Transcripts.student_id = Students.student_id join Detention on Students.student_id = Detention.student_id  group by transcripts.student_id having  count(*) = 2
select detention.datetime_detention_start , detention.datetime_detention_end from Transcripts join Students on Transcripts.student_id = Students.student_id join Detention on Students.student_id = Detention.student_id  group by transcripts.student_id having  count(*) = 2
select detention.datetime_detention_start from Detention
select detention.datetime_detention_start from Detention
select author.name from Author
select author.name from Author
select client.name , client.address from Client
select client.name , client.address from Client
select book.title , book.isbn , book.saleprice from Book
select book.title , book.isbn , book.saleprice from Book
select count(*) from Book
select count(*) from Book
select count(*) from Author
select count(*) from Author
select count(*) from Client
select count(*) from Client
select client.name , client.address from Client   order by client.name asc
select client.name , client.address from Client   order by client.name asc
select book.title , author.name from Author join Book on Author.idAuthor = Book.ISBN
select book.title , author_book.author from Author_Book join Book on Author_Book.ISBN = Book.ISBN
select orders.idorder , client.name from Client join Orders on Client.IdClient = Orders.IdClient
select orders.idorder , client.name from Client join Orders on Client.IdClient = Orders.IdClient
select author.name , count(*) from Author join Author_Book on Author.idAuthor = Author_Book.ISBN  group by author.name
select author.name , count(*) from Author join Book on Author.idAuthor = Book.ISBN  group by book.author
select books_order.isbn , count(*) from Books_Order  group by books_order.isbn
select book.isbn , count(*) from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by book.isbn
select books_order.isbn , sum(books_order.amount) from Books_Order  group by books_order.isbn
select book.isbn , sum(books_order.amount) from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by book.isbn
select book.title from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by books_order.idorder  order by count(*) desc limit 1
select book.title from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by books_order.isbn  order by count(*) desc limit 1
select book.title , book.purchaseprice from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by books_order.idorder  order by sum(books_order.amount) desc limit 1
select book.title , book.purchaseprice from Books_Order join Book on Books_Order.ISBN = Book.ISBN  group by book.title  order by sum(books_order.amount) desc limit 1
select book.title from Books_Order join Book on Books_Order.ISBN = Book.ISBN
select distinct book.title from Books_Order join Orders on Books_Order.IdOrder = Orders.IdOrder join Book on Books_Order.ISBN = Book.ISBN
select client.name from Client join Orders on Client.IdClient = Orders.IdClient  group by orders.idclient having  count(*) >= 1
select distinct client.name from Client join Orders on Client.IdClient = Orders.IdClient
select client.name , count(*) from Client join Orders on Client.IdClient = Orders.IdClient  group by orders.idclient
select count(*) , client.name from Client join Orders on Client.IdClient = Orders.IdClient  group by client.idclient
select client.name from Client join Orders on Client.IdClient = Orders.IdClient  group by orders.idclient  order by count(*) desc limit 1
select client.name from Client join Orders on Client.IdClient = Orders.IdClient  group by orders.idclient  order by count(*) desc limit 1
select client.name , sum(books_order.amount) from Client join Books_Order on Client.IdClient = Books_Order.ISBN  group by client.name
select client.name , sum(books_order.amount) from Client join Books_Order on Client.IdClient = Books_Order.ISBN  group by client.name
select client.name from Client join Books_Order on Client.IdClient = Books_Order.ISBN  group by client.name  order by sum(books_order.amount) desc limit 1
select client.name from Client join Books_Order on Client.IdClient = Books_Order.ISBN  group by client.idclient  order by sum(books_order.amount) desc limit 1
select book.title from Book where  book.isbn not in (select Books_Order.ISBN from Books_Order  )
select book.title from Book where  book.isbn not in (select Books_Order.ISBN from Books_Order  )
select client.name from Client   except select client.name from Client join Orders on Client.IdClient = Orders.IdClient
select client.name from Client   except select client.name from Client join Orders on Client.IdClient = Orders.IdClient
select max(book.saleprice) , min(book.saleprice) from Book
select max(book.saleprice) , min(book.saleprice) from Book
select avg(book.purchaseprice) , avg(book.saleprice) from Book
select avg(book.purchaseprice) , avg(book.saleprice) from Book
select max(book.saleprice) from Book
select book.saleprice - book.purchaseprice from Book  group by book.saleprice
select book.title from Book where  book.saleprice > (select avg(book.saleprice) from Book  )
select book.title from Book where  book.saleprice > (select avg(book.saleprice) from Book  )
select book.title from Book   order by book.saleprice asc limit 1
select book.title from Book where  book.saleprice = (select min(book.saleprice) from Book  )
select book.title from Book   order by book.purchaseprice desc limit 1
select book.title from Book   order by book.purchaseprice desc limit 1
select avg(book.saleprice) from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "George Orwell"
select avg(book.saleprice) from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "George Orwell"
select book.saleprice from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "Plato"
select book.saleprice from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "Plato"
select book.title from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "George Orwell"   order by book.saleprice asc limit 1
select book.title from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "George Orwell"   order by book.saleprice asc limit 1
select book.title from Book where  book.saleprice < (select avg(book.saleprice) from Book join Author on Book.ISBN = Author.idAuthor where  author.name = "Plato"  )
select book.title from Author join Book on Author.idAuthor = Book.ISBN where  author.name = "Plato" and book.saleprice < (select avg(book.saleprice) from Book  )
select author.name from Author join Book on Author.idAuthor = Book.ISBN where  book.title = "Pride and Prejudice"
select author.name from Author join Book on Author.idAuthor = Book.ISBN where  book.title = "Pride and Prejudice"
select book.title from Author join Book on Author.idAuthor = Book.ISBN where  author.name like "%Plato%"
select book.title from Author join Book on Author.idAuthor = Book.ISBN where  author.name like "%Plato%"
select count(*) from Books_Order join Orders on Books_Order.IdOrder = Orders.IdOrder join Book on Books_Order.ISBN = Book.ISBN where  book.title = "Pride and Prejudice"
select count(*) from Books_Order join Orders on Books_Order.IdOrder = Orders.IdOrder join Book on Books_Order.ISBN = Book.ISBN where  book.title = "Pride and Prejudice"
select orders.idorder from Books_Order join Orders on Books_Order.IdOrder = Orders.IdOrder join Book on Books_Order.ISBN = Book.ISBN where  book.title = "Pride and Prejudice"   intersect select orders.idorder from Books_Order join Orders on Books_Order.IdOrder = Orders.IdOrder join Book on Books_Order.ISBN = Book.ISBN where  book.title = "The Little Prince"
select books_order.idorder from Books_Order join Book on Books_Order.ISBN = Book.ISBN where  book.title = "Pride and Prejudice"   intersect select books_order.idorder from Books_Order join Book on Books_Order.ISBN = Book.ISBN where  book.title = "The Little Prince"
select books_order.isbn from Client join Books_Order on Client.IdClient = Books_Order.ISBN where  client.name = "Peter Doe"   intersect select books_order.isbn from Client join Books_Order on Client.IdClient = Books_Order.ISBN where  client.name = "James Smith"
select books_order.isbn from Client join Books_Order on Client.IdClient = Books_Order.ISBN where  client.name = "Peter Doe"   intersect select books_order.isbn from Client join Books_Order on Client.IdClient = Books_Order.ISBN where  client.name = "James Smith"
select book.title from Client join Book on Client.IdClient = Book.ISBN where  client.name = "Peter Doe"   except select book.title from Client join Book on Client.IdClient = Book.ISBN where  client.name = "James Smith"
select book.title from Client join Book on Client.IdClient = Book.ISBN where  client.name = "Peter Doe"   except select book.title from Client join Book on Client.IdClient = Book.ISBN where  client.name = "James Smith"
select client.name from Client join Book on Client.IdClient = Book.ISBN where  book.title = "Pride and Prejudice"
select client.name from Client join Book on Client.IdClient = Book.ISBN where  book.title = "Pride and Prejudice"
select count(*) from book
select book.title from book   order by book.title asc
select book.title from book   order by book.pages desc
select book.type , book.release from book
select max(book.chapters) , min(book.chapters) from book
select book.title from book where  book.type != "Poet"
select avg(review.rating) from review
select book.title , review.rating from review join book on review.Book_ID = book.Book_ID
select review.rating from review join book on review.Book_ID = book.Book_ID   order by book.chapters desc limit 1
select review.rank from review join book on review.Book_ID = book.Book_ID   order by book.pages asc limit 1
select book.title from review join book on review.Book_ID = book.Book_ID   order by review.rank asc limit 1
select avg(review.readers_in_million) from review join book on review.Book_ID = book.Book_ID where  book.type = "Novel"
select book.type , count(*) from book  group by book.type
select book.type from book  group by book.type  order by count(*) desc limit 1
select book.type from book  group by book.type having  count(*) >= 3
select book.title from review join book on review.Book_ID = book.Book_ID   order by review.rating asc
select book.title , book.audio from review join book on review.Book_ID = book.Book_ID   order by review.readers_in_million desc
select count(*) from book where  book.book_id not in (select review.Book_ID from review  )
select book.type from book where  book.chapters > 75   intersect select book.type from book where  book.chapters < 50
select count( distinct book.type) from book
select book.type , book.title from book where  book.book_id not in (select review.Book_ID from review  )
select count(*) from customer
select count(*) from customer
select customer.name from customer   order by customer.level_of_membership asc
select customer.name from customer   order by customer.level_of_membership asc
select customer.nationality , customer.card_credit from customer
select customer.nationality , customer.card_credit from customer
select customer.name from customer where  customer.nationality = "England" or customer.nationality = "Australia"
select customer.name from customer where  customer.nationality = "England" or customer.nationality = "Australia"
select avg(customer.card_credit) from customer where  customer.level_of_membership > 1
select avg(customer.card_credit) from customer where  customer.level_of_membership > 1
select customer.card_credit from customer   order by customer.level_of_membership desc limit 1
select customer.card_credit from customer   order by customer.level_of_membership desc limit 1
select customer.nationality , count(*) from customer  group by customer.nationality
select customer.nationality , count(*) from customer  group by customer.nationality
select customer.nationality from customer  group by customer.nationality  order by count(*) desc limit 1
select customer.nationality from customer  group by customer.nationality  order by count(*) desc limit 1
select customer.nationality from customer where  customer.card_credit < 50   intersect select customer.nationality from customer where  customer.card_credit > 75
select customer.nationality from customer where  customer.card_credit > 50 and customer.card_credit < 75
select customer.name , customer_order.dish_name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID
select customer.name , customer_order.dish_name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID
select customer.name , customer_order.dish_name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID   order by customer_order.quantity desc
select customer.name , customer_order.dish_name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID   order by customer_order.quantity desc
select customer.name , sum(customer_order.quantity) from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID  group by customer.name
select customer.name , sum(customer_order.quantity) from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID  group by customer.name
select customer_order.customer_id from customer_order  group by customer_order.customer_id having  sum(customer_order.quantity) > 1
select customer.name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID  group by customer.name having  sum(customer_order.quantity) > 1
select distinct branch.manager from branch
select distinct branch.manager from branch
select customer.name from customer   except select customer.name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID
select customer.name from customer   except select customer.name from customer_order join customer on customer_order.Customer_ID = customer.Customer_ID
select count(*) from member
select member.name from member   order by member.age asc
select member.name , member.nationality from member
select member.name from club_leader join member on club_leader.Member_ID = member.Member_ID join club on club_leader.Club_ID = club.Club_ID where  member.nationality != "" and club.overall_ranking = "1"
select member.name from member where  member.age = 19 or member.age = 20
select member.name from member   order by member.age desc limit 1
select member.nationality , count(*) from member  group by member.nationality
select member.nationality from member  group by member.nationality  order by count(*) desc limit 1
select member.nationality , count(*) from member  group by member.nationality having  count(*) >= 2
select member.name , club.club_name from club_leader join member on club_leader.Member_ID = member.Member_ID join club on club_leader.Club_ID = club.Club_ID
select member.name from club_leader join member on club_leader.Member_ID = member.Member_ID join club on club_leader.Club_ID = club.Club_ID where  club.overall_ranking > 100
select member.name from club_leader join member on club_leader.Member_ID = member.Member_ID where  club_leader.year_join < 2018
select member.name from club_leader join member on club_leader.Member_ID = member.Member_ID join club on club_leader.Club_ID = club.Club_ID where  club.club_name = "Houston"
select member.name from member   except select member.name from club_leader join member on club_leader.Member_ID = member.Member_ID
select member.nationality from member where  member.age > 22   intersect select member.nationality from member where  member.age < 19
select avg(member.age) from member
select club.club_name from club where  club.club_name like "%state%"
select collection_subsets.collection_subset_name from Collection_Subsets
select collection_subsets.collection_subset_name from Collection_Subsets
select collection_subsets.collecrtion_subset_details from Collection_Subsets where  collection_subsets.collection_subset_name = "Top collection"
select collection_subsets.collecrtion_subset_details from Collection_Subsets where  collection_subsets.collection_subset_name = "Top collection"
select document_subsets.document_subset_name from Document_Subsets
select document_subsets.document_subset_name from Document_Subsets
select document_subsets.document_subset_details from Document_Subsets where  document_subsets.document_subset_name = "Best for 2000"
select document_subsets.document_subset_details from Document_Subsets where  document_subsets.document_subset_name = "Best for 2000"
select document_objects.document_object_id from Document_Objects
select document_objects.document_object_id from Document_Objects
select document_objects.parent_document_object_id from Document_Objects where  document_objects.owner = "Marlin"
select document_objects.document_object_id from Document_Objects where  document_objects.owner = "Marlin"
select document_objects.owner from Document_Objects where  document_objects.description = "Braeden Collection"
select document_objects.owner from Document_Objects where  document_objects.description = "Braeden Collection"
select document_objects.owner from Document_Objects where  document_objects.owner = "Marlin"
select document_objects.parent_document_object_id from Document_Objects where  document_objects.owner = "Marlin"
select distinct document_objects.description from Document_Objects
select distinct document_objects.description from Document_Objects
select count(*) from Document_Objects where  document_objects.owner = "Marlin"
select count(*) from Document_Objects where  document_objects.owner = "Marlin"
select document_objects.document_object_id from Document_Objects   except select document_objects.document_object_id from Document_Objects
select document_objects.document_object_id from Document_Objects   except select document_objects.document_object_id from Document_Objects
select document_objects.parent_document_object_id , count(*) from Document_Objects  group by document_objects.parent_document_object_id
select document_objects.parent_document_object_id , count(*) from Document_Objects  group by document_objects.parent_document_object_id
select collections.collection_name from Collections
select collections.collection_name from Collections
select collections.collection_description from Collections where  collections.collection_name = "Best"
select collections.collection_description from Collections where  collections.collection_name = "Best"
select collections.parent_collection_id from Collections where  collections.collection_name = "Nice"
select collections.parent_collection_id from Collections where  collections.collection_name = "Nice"
select collections.collection_name from Collections   except select collections.collection_name from Collections
select collections.collection_name from Collections   except select collections.collection_name from Collections
select document_objects.document_object_id from Document_Objects  group by document_objects.document_object_id having  count(*) > 1
select document_objects.document_object_id from Document_Objects  group by document_objects.document_object_id having  count(*) > 1
select count(*) from Collections where  collections.collection_name = "Best"
select count(*) from Collections where  collections.collection_name = "Best"
select document_subset_members.related_document_object_id from Document_Subset_Members join Document_Objects on Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID where  document_objects.owner = "Ransom"
select document_objects.document_object_id from Document_Objects where  document_objects.owner = "Ransom"
select collection_subsets.collection_subset_id , collection_subsets.collection_subset_name , count(*) from Collection_Subset_Members join Collection_Subsets on Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID  group by collection_subsets.collection_subset_id
select collection_subsets.collection_subset_id , collection_subsets.collection_subset_name , count(*) from Collection_Subset_Members join Collection_Subsets on Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID  group by collection_subsets.collection_subset_id
select document_objects.document_object_id , count(*) from Document_Objects  group by document_objects.document_object_id  order by count(*) desc limit 1
select document_objects.document_object_id , count(*) from Document_Objects  group by document_objects.document_object_id
select document_subset_members.document_object_id , count(*) from Document_Subset_Members  group by document_subset_members.document_object_id  order by count(*) asc limit 1
select document_objects.document_object_id from Document_Objects  group by document_objects.document_object_id  order by count(*) asc limit 1
select document_subset_members.related_document_object_id , count(*) from Document_Subset_Members  group by document_subset_members.related_document_object_id having  count(*) between 2 and 4
select documents_in_collections.document_object_id , count(*) from Documents_in_Collections join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID  group by documents_in_collections.document_object_id having  count(*) between 2 and 4
select document_objects.owner from Document_Objects where  document_objects.owner = (select document_objects.owner from Document_Objects where  document_objects.owner = "Breeden"  )
select distinct document_objects.owner from Document_Objects where  document_objects.owner = (select document_objects.owner from Document_Objects where  document_objects.owner = "Breeden"  )
select distinct document_subsets.document_subset_name from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID join Document_Objects on Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID where  document_objects.owner = "Breeden"
select distinct document_subsets.document_subset_name from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID join Document_Objects on Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID where  document_objects.owner = "Breeden"
select document_subsets.document_subset_id , document_subsets.document_subset_name , count( distinct document_subset_members.document_object_id) from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID  group by document_subsets.document_subset_id
select document_subsets.document_subset_id , document_subsets.document_subset_name , count( distinct document_subset_members.document_object_id) from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID  group by document_subsets.document_subset_id
sql placeholder
sql placeholder
select document_subsets.document_subset_id from Document_Subsets where  document_subsets.document_subset_name = "Best for 2000"
select document_subsets.document_subset_id from Document_Subsets where  document_subsets.document_subset_name = "Best for 2000"
select document_subsets.document_subset_name , document_subset_members.document_subset_id from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID
select document_subsets.document_subset_name , document_subset_members.document_subset_id from Document_Subset_Members join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID
select collections.collection_name from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID where  document_objects.owner = "Ransom"
select collections.collection_name from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID where  document_objects.owner = "Ransom"
select count( distinct documents_in_collections.collection_id) , documents_in_collections.document_object_id from Documents_in_Collections  group by documents_in_collections.document_object_id
select count(*) , document_objects.document_object_id from Documents_in_Collections join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID  group by document_objects.document_object_id
select count(*) from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select count(*) from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select documents_in_collections.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select count(*) from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select collections.collection_name , documents_in_collections.collection_id , count(*) from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID  group by documents_in_collections.collection_id  order by count(*) desc limit 1
select collections.collection_name , collections.collection_id , count(*) from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"  group by collections.collection_id  order by count(*) desc limit 1
select document_subset_members.document_subset_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  document_subsets.document_subset_name = "Best for 2000" and collections.collection_name = "Best"
select distinct document_subset_members.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  document_subsets.document_subset_name = "Best for 2000" and collections.collection_name = "Best"
select documents_in_collections.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  collections.collection_name = "Best" and document_subsets.document_subset_name != "Best for 2000"
select distinct documents_in_collections.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  collections.collection_name = "Best" and document_subsets.document_subset_name != "Best for 2000"
select documents_in_collections.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  document_subsets.document_subset_name = "Best for 2000" or collections.collection_name = "Best"
select distinct document_subset_members.document_object_id from Documents_in_Collections join Collections on Documents_in_Collections.Collection_ID = Collections.Collection_ID join Document_Objects on Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID join Document_Subset_Members on Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID join Document_Subsets on Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID where  document_subsets.document_subset_name = "Best for 2000" or collections.collection_name = "Best"
select collections.collection_name from Collections where  collections.collection_name = "Best"
select collections.collection_name from Collections where  collections.collection_name = "Best"
select count(*) from Collection_Subset_Members join Collections on Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select count( distinct collection_subset_members.related_collection_id) from Collection_Subset_Members join Collections on Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select collection_subsets.collection_subset_name from Collection_Subset_Members join Collection_Subsets on Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID join Collections on Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select collection_subsets.collection_subset_name from Collection_Subset_Members join Collection_Subsets on Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID join Collections on Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID where  collections.collection_name = "Best"
select count(*) from songs where  songs.name like "%Love%"
select songs.name from songs   order by songs.name asc
select songs.name , songs.language from songs
select max(performance_score.voice_sound_quality) , min(performance_score.voice_sound_quality) from performance_score
select performance_score.voice_sound_quality , performance_score.rhythm_tempo , performance_score.stage_presence from performance_score join participants on performance_score.participant_id = participants.id where  participants.name = "Freeway"
select songs.id , songs.language , songs.original_artist from songs where  songs.name != "Love"
select songs.name , songs.original_artist from songs where  songs.english_translation = "All the streets of love"
select distinct performance_score.stage_presence from performance_score join songs on performance_score.songs_id = songs.id where  songs.language = "English"
select participants.id , participants.name from performance_score join participants on performance_score.participant_id = participants.id  group by performance_score.participant_id having  count(*) >= 2
select participants.id , participants.name , participants.popularity from performance_score join participants on performance_score.participant_id = participants.id  group by performance_score.participant_id  order by count(*) asc
select performance_score.participant_id , participants.name from performance_score join participants on performance_score.participant_id = participants.id where  performance_score.voice_sound_quality = 5 or performance_score.rhythm_tempo = 5
select performance_score.voice_sound_quality from performance_score join songs on performance_score.songs_id = songs.id where  songs.language = "English" and songs.name = "The Balkan Girls"
select songs.id , songs.name from performance_score join songs on performance_score.songs_id = songs.id  group by performance_score.songs_id  order by count(*) desc limit 1
select count(*) from performance_score where  performance_score.stage_presence < 7 or performance_score.stage_presence > 9
select count(*) from songs where  songs.id not in (select performance_score.songs_id from performance_score  )
select avg(performance_score.rhythm_tempo) , songs.language from performance_score join songs on performance_score.songs_id = songs.id  group by songs.language
select distinct participants.name from performance_score join songs on performance_score.songs_id = songs.id join participants on performance_score.participant_id = participants.id where  songs.language = "English"
select participants.name , participants.popularity from performance_score join songs on performance_score.songs_id = songs.id join participants on performance_score.participant_id = participants.id where  songs.language = "Croatian"   intersect select participants.name , participants.popularity from performance_score join songs on performance_score.songs_id = songs.id join participants on performance_score.participant_id = participants.id where  songs.language = "English"
select songs.name from songs where  songs.name like "%Is%"
select songs.original_artist from performance_score join songs on performance_score.songs_id = songs.id where  performance_score.rhythm_tempo > 5   order by performance_score.voice_sound_quality desc
select count(*) from City
select count(*) from City
select distinct city.state from City
select distinct city.state from City
select count( distinct city.country) from City
select count(*) from City
select city.city_name , city.city_code , city.state , city.country from City
select city.city_name , city.city_code , city.state , city.country from City
select city.latitude , city.longitude from City where  city.city_name = "Baltimore"
select city.latitude , city.longitude from City where  city.city_name = "Baltimore"
select city.city_name from City where  city.state = "PA"
select city.city_name from City where  city.state = "PA"
select count(*) from City where  city.country = "CANADA"
select count(*) from City where  city.country = "CANADA"
select city.city_name from City where  city.country = "USA"   order by city.latitude asc
select city.city_name from City where  city.country = "USA"   order by city.latitude asc
select city.state , count(*) from City  group by city.state
select count(*) , city.state from City  group by city.state
select city.country , count(*) from City  group by city.country
select count(*) , city.country from City  group by city.country
select city.state from City  group by city.state having  count(*) >= 2
select city.state from City  group by city.state having  count(*) >= 2
select city.state from City  group by city.state  order by count(*) desc limit 1
select city.state from City  group by city.state  order by count(*) desc limit 1
select city.country from City  group by city.country  order by count(*) asc limit 1
select city.country from City  group by city.country  order by count(*) asc limit 1
select student.fname , student.lname from Student join City on Student.city_code = City.city_code where  city.state = "MD"
select student.fname , student.lname from Student join City on Student.city_code = City.city_code where  city.state = "MD"
select count(*) from Student join City on Student.city_code = City.city_code where  city.country = "CHINA"
select count(*) from Student join City on Student.city_code = City.city_code where  city.country = "CHINA"
select student.fname , student.major from Student join City on Student.city_code = City.city_code where  city.city_name = "Baltimore"
select student.fname , student.major from Student join City on Student.city_code = City.city_code where  city.city_name = "Baltimore"
select city.country , count(*) from Student join City on Student.city_code = City.city_code  group by city.country
select city.country , count(*) from Student join City on Student.city_code = City.city_code  group by city.country
select count(*) , student.city_code from Student  group by student.city_code
select city.city_name , count(*) from Student join City on Student.city_code = City.city_code  group by student.city_code
select city.state from Student join City on Student.city_code = City.city_code  group by city.state  order by count(*) desc limit 1
select city.state from Student join City on Student.city_code = City.city_code  group by city.state  order by count(*) desc limit 1
select city.country from Student join City on Student.city_code = City.city_code  group by city.country  order by count(*) asc limit 1
select city.country from Student join City on Student.city_code = City.city_code  group by city.country  order by count(*) asc limit 1
select city.city_name from Student join City on Student.city_code = City.city_code  group by student.city_code having  count(*) >= 3
select city.city_name from Student join City on Student.city_code = City.city_code  group by student.city_code having  count(*) >= 3
select city.state from Student join City on Student.city_code = City.city_code  group by city.state having  count(*) > 5
select city.state from Student join City on Student.city_code = City.city_code  group by city.state having  count(*) > 5
select student.stuid from Student join City on Student.city_code = City.city_code where  city.country != "USA"
select student.stuid from Student join City on Student.city_code = City.city_code where  city.country != "USA"
select student.stuid from Student join City on Student.city_code = City.city_code where  student.sex = "F" and city.state = "PA"
select student.stuid from Student join City on Student.city_code = City.city_code where  city.state = "PA" and student.sex = "F"
select student.stuid from Student join City on Student.city_code = City.city_code where  city.country != "USA" and student.sex = "M"
select student.stuid from Student join City on Student.city_code = City.city_code where  student.sex = "M" and city.country != "USA"
select direct_distance.distance from Direct_distance where  direct_distance.city1_code = "BAL" and direct_distance.city2_code = "CHI"
select direct_distance.distance from Direct_distance where  direct_distance.city1_code = "BAL" and direct_distance.city2_code = "CHI"
select direct_distance.distance from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"   intersect select direct_distance.distance from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Newark"
select direct_distance.distance from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"   intersect select direct_distance.distance from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Newark"
select avg(direct_distance.distance) , min(direct_distance.distance) , max(direct_distance.distance) from Direct_distance
select avg(direct_distance.distance) , min(direct_distance.distance) , max(direct_distance.distance) from Direct_distance
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code   order by direct_distance.distance desc limit 2
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code   order by direct_distance.distance desc limit 1
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code where  direct_distance.distance > (select avg(Direct_distance.distance) from Direct_distance  )
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code where  direct_distance.distance > (select avg(Direct_distance.distance) from Direct_distance  )
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code where  direct_distance.distance < 1000
select city.city_code from Direct_distance join City on Direct_distance.city2_code = City.city_code where  direct_distance.distance < 1000
select sum(direct_distance.distance) from Direct_distance where  direct_distance.city1_code = "BAL"
select sum(direct_distance.distance) from Direct_distance where  direct_distance.city1_code = "BAL"
select avg(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"
select avg(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"
select city.city_name from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Chicago" and direct_distance.distance = (select min(Direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Chicago"  )
select city.city_name from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Chicago" and direct_distance.distance = (select min(Direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Chicago"  )
select city.city_name from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston" and direct_distance.distance = (select max(Direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"  )
select city.city_name from Direct_distance join City on Direct_distance.city2_code = City.city_code where  city.city_name = "Boston"   order by direct_distance.distance desc limit 1
select city.city_code , sum(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code  group by city.city_code
select city.city_code , sum(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code  group by city.city_code
select city.city_name , avg(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code  group by city.city_name
select city.city_name , avg(direct_distance.distance) from Direct_distance join City on Direct_distance.city2_code = City.city_code  group by city.city_code
select direct_distance.distance from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Linda" and student.lname = "Smith"   intersect select direct_distance.distance from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Tracy" and student.lname = "Kim"
select direct_distance.distance from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Linda" and student.lname = "Tracy"   intersect select direct_distance.distance from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Smith" and student.lname = "Kim"
select student.fname , student.lname from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  direct_distance.distance = (select max(Direct_distance.distance) from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Linda" and student.lname = "Smith"  )
select student.fname , student.lname from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  direct_distance.distance = (select max(Direct_distance.distance) from Student join City on Student.city_code = City.city_code join Direct_distance on City.city_code = Direct_distance.city2_code where  student.fname = "Linda" and student.lname = "Smith"  )
select city.state from Student join City on Student.city_code = City.city_code where  student.fname = "Linda"
select city.state from Student join City on Student.city_code = City.city_code where  student.fname = "Linda"
select * from Sailors where  sailors.age > 30
select * from Sailors where  sailors.age > 30
select sailors.name , sailors.age from Sailors where  sailors.age < 30
select sailors.name , sailors.age from Sailors where  sailors.age < 30
select boats.name from Reserves join Boats on Reserves.bid = Boats.bid where  reserves.sid = 1
select distinct reserves.bid from Reserves join Sailors on Reserves.sid = Sailors.sid where  sailors.sid = 1
select sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid where  reserves.bid = 102
select sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid where  reserves.bid = 102
select distinct reserves.bid from Reserves
select reserves.sid from Reserves
select sailors.name from Sailors where  sailors.name like "%e%"
select sailors.name from Sailors where  sailors.name like "%e%"
select distinct sailors.sid from Sailors where  sailors.age > (select max(sailors.age) from Sailors  )
select distinct sailors.sid from Sailors where  sailors.age != (select min(sailors.age) from Sailors  )
select distinct sailors.name from Sailors where  sailors.age > (select max(sailors.age) from Sailors where  sailors.rating > 7  )
select distinct sailors.name from Sailors where  sailors.age > (select max(sailors.age) from Sailors where  sailors.rating > 7  )
select sailors.name , sailors.sid from Reserves join Sailors on Reserves.sid = Sailors.sid
select sailors.name , sailors.sid from Reserves join Sailors on Reserves.sid = Sailors.sid  group by reserves.sid having  count(*) >= 1
select sailors.sid , sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid  group by sailors.sid having  count(*) > 1
select distinct sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid  group by sailors.name having  count(*) >= 2
select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "red" or boats.color = "blue"
select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "red" or boats.color = "blue"
select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red" or boats.color = "blue"
select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red" or boats.color = "blue"
select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "red"   intersect select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "blue"
select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "red"   intersect select reserves.sid from Reserves join Boats on Reserves.bid = Boats.bid where  boats.color = "blue"
select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"   intersect select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "blue"
select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"   intersect select sailors.name , sailors.sid from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "blue"
select sailors.sid from Sailors   except select reserves.sid from Reserves
select sailors.sid from Sailors   except select reserves.sid from Reserves
select sailors.name , sailors.sid from Sailors where  sailors.sid not in (select Reserves.sid from Reserves  )
select sailors.name , sailors.sid from Sailors   except select sailors.name , sailors.sid from Reserves join Sailors on Reserves.sid = Sailors.sid
select sailors.sid from Sailors   except select reserves.sid from Reserves
select sailors.sid from Sailors   except select reserves.sid from Reserves
select sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid where  reserves.bid = 103
select sailors.name from Reserves join Sailors on Reserves.sid = Sailors.sid where  reserves.bid = 103
select sailors.name from Sailors where  sailors.rating > (select min(sailors.rating) from Sailors where  sailors.name = "Luis"  )
select sailors.name from Sailors where  sailors.rating > (select min(sailors.rating) from Sailors where  sailors.name = "Luis"  )
select sailors.name from Sailors where  sailors.rating > (select max(sailors.rating) from Sailors where  sailors.name = "Luis"  )
select sailors.name from Sailors where  sailors.rating > (select max(sailors.rating) from Sailors where  sailors.name = "Luis"  )
select sailors.name , sailors.sid from Reserves join Sailors on Reserves.sid = Sailors.sid where  sailors.rating > 2 and reserves.bid = 1
select sailors.name , sailors.sid from Reserves join Sailors on Reserves.sid = Sailors.sid where  sailors.rating >= 3 and reserves.sid = 1
select sailors.name , sailors.age from Sailors   order by sailors.age desc limit 1
select sailors.name , sailors.age from Sailors   order by sailors.age desc limit 1
select count(*) from Sailors
select count(*) from Sailors
select avg(sailors.age) from Sailors where  sailors.rating = 7
select avg(sailors.age) from Sailors where  sailors.rating = 7
select count(*) from Sailors where  sailors.name like "D%"
select count(*) from Sailors where  sailors.name like "D%"
select avg(sailors.rating) , max(sailors.age) from Sailors
select avg(sailors.rating) , max(sailors.age) from Sailors
select count(*) , boats.name from Reserves join Boats on Reserves.bid = Boats.bid  group by boats.name
select count(*) , boats.name from Reserves join Boats on Reserves.bid = Boats.bid  group by boats.name
select count(*) , reserves.bid from Reserves where  reserves.sid > 50  group by reserves.bid
select count(*) , reserves.bid from Reserves where  reserves.sid > 50  group by reserves.bid
select count(*) , reserves.bid from Reserves  group by reserves.bid having  count(*) > 1
select count(*) , reserves.bid from Reserves  group by reserves.bid having  count(*) > 1
select count(*) , reserves.bid from Reserves where  reserves.sid > 1  group by reserves.bid
select count(*) , reserves.sid from Reserves where  reserves.sid > 1  group by reserves.sid
select avg(sailors.age) , min(sailors.age) , sailors.rating from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"  group by sailors.rating
select avg(sailors.age) , sailors.rating from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"  group by sailors.rating
select sailors.name , sailors.rating , sailors.age from Sailors   order by sailors.rating,sailors.age asc
select sailors.name , sailors.rating , sailors.age from Sailors   order by sailors.rating,sailors.age asc
select count(*) from Boats
select count(*) from Boats
select count(*) from Boats where  boats.color = "red"
select count(*) from Boats where  boats.color = "red"
select boats.name from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  sailors.age between 20 and 30
select boats.name from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  sailors.age between 20 and 30
select sailors.name from Sailors where  sailors.rating > (select max(sailors.rating) from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"  )
select sailors.name from Sailors where  sailors.rating > (select max(sailors.rating) from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.color = "red"  )
select max(sailors.rating) from Sailors
select max(sailors.rating) from Sailors
select sailors.name from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.name = "Melon"
select sailors.name from Reserves join Boats on Reserves.bid = Boats.bid join Sailors on Reserves.sid = Sailors.sid where  boats.name = "Melon"
select sailors.name , sailors.age from Sailors   order by sailors.rating desc
select sailors.name , sailors.age from Sailors   order by sailors.rating desc
select headphone.model from headphone   order by headphone.price desc limit 1
select headphone.model from headphone   order by headphone.price desc limit 1
select distinct headphone.model from headphone   order by headphone.model asc
select distinct headphone.model from headphone   order by headphone.model asc
select headphone.class from headphone  group by headphone.class  order by count(*) desc limit 1
select headphone.class from headphone  group by headphone.class  order by count(*) desc limit 1
select headphone.class from headphone  group by headphone.class having  count(*) > 2
select headphone.class from headphone   except select headphone.class from headphone  group by headphone.class having  count(*) > 2
select count(*) , headphone.class from headphone where  headphone.price > 200  group by headphone.class
select headphone.class , count(*) from headphone where  headphone.price > 200  group by headphone.class
select count( distinct headphone.earpads) from headphone
select count( distinct headphone.earpads) from headphone
select headphone.earpads from headphone  group by headphone.earpads  order by count(*) desc limit 2
select headphone.earpads from headphone  group by headphone.earpads  order by count(*) desc limit 2
select headphone.model , headphone.class , headphone.construction from headphone   order by headphone.price asc limit 1
select headphone.model , headphone.class , headphone.construction from headphone   order by headphone.price asc limit 1
select headphone.construction , avg(headphone.price) from headphone  group by headphone.construction
select avg(headphone.price) , headphone.construction from headphone  group by headphone.construction
select headphone.class from headphone where  headphone.earpads = "Bowls"   intersect select headphone.class from headphone where  headphone.earpads = "Comfort Pads"
select headphone.class from headphone where  headphone.earpads = "Bowls"   intersect select headphone.class from headphone where  headphone.earpads = "Comfort Pads"
select headphone.earpads from headphone   except select headphone.earpads from headphone where  headphone.construction = "Plastic"
select headphone.earpads from headphone where  headphone.construction != "Plastic"
select headphone.model from headphone where  headphone.price < (select avg(headphone.price) from headphone  )
select headphone.model from headphone where  headphone.price < (select avg(headphone.price) from headphone  )
select store.name from store   order by store.date_opened asc
select store.name from store   order by store.date_opened asc
select store.name , store.parking from store where  store.neighborhood = "Tarzana"
select store.name , store.parking from store where  store.neighborhood = "Tarzana"
select count( distinct store.neighborhood) from store
select count( distinct store.neighborhood) from store
select store.neighborhood , count(*) from store  group by store.neighborhood
select store.neighborhood , count(*) from store  group by store.neighborhood
select store.name , count(*) from stock join store on stock.Store_ID = store.Store_ID  group by stock.store_id  order by count(*) desc limit 1
select store.name , sum(stock.quantity) from stock join store on stock.Store_ID = store.Store_ID  group by stock.store_id
select store.name from store where  store.store_id not in (select stock.Store_ID from stock  )
select store.name from store where  store.store_id not in (select stock.Store_ID from stock  )
select headphone.model from headphone where  headphone.headphone_id not in (select stock.Headphone_ID from stock  )
select headphone.model from headphone where  headphone.headphone_id not in (select stock.Headphone_ID from stock  )
select headphone.model from stock join headphone on stock.Headphone_ID = headphone.Headphone_ID  group by stock.headphone_id  order by sum(stock.quantity) desc limit 1
select headphone.model from stock join headphone on stock.Headphone_ID = headphone.Headphone_ID  group by headphone.model  order by sum(stock.quantity) desc limit 1
select count(*) from stock join store on stock.Store_ID = store.Store_ID where  store.name = "Woodman"
select sum(stock.quantity) from stock join store on stock.Store_ID = store.Store_ID where  store.name = "Woodman"
select store.neighborhood from store where  store.store_id not in (select stock.Store_ID from stock  )
select store.neighborhood from store   except select store.neighborhood from stock join store on stock.Store_ID = store.Store_ID
select count(*) from Author
select count(*) from Author
select count(*) from Paper
select count(*) from Paper
select count(*) from Affiliation
select count(*) from Affiliation
select count(*) from Paper where  paper.venue = "NAACL" and paper.year = 2000
select count(*) from Paper where  paper.venue = "NAACL" and paper.year = 2000
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University" and paper.year = 2009
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University" and paper.year = 2009
select affiliation.name , affiliation.address from Affiliation
select affiliation.name , affiliation.address from Affiliation
select paper.venue , paper.year from Paper   order by paper.year asc
select distinct paper.venue from Paper   order by paper.year asc
select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Harvard University"
select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Harvard University"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"
select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Stanford University"   intersect select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University"
select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Stanford University"   intersect select paper.title , paper.paper_id from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown , Kathleen"   intersect select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Rambow , Owen"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown , Kathleen"   intersect select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Rambow , Owen"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown" and author_list.author_id != "Rambow"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   except select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Rambow"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown , Kathleen" or author.name = "Rambow , Owen"
select paper.title , paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown , Kathleen" or author.name = "Rambow , Owen"
select author.name , count(*) from Author_list join Author on Author_list.author_id = Author.author_id  group by author.name  order by count(*) desc
select author.name , count(*) from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id  group by author.name  order by count(*) asc
select affiliation.name from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id  group by affiliation.affiliation_id  order by count(*) asc
select affiliation.name from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id  group by affiliation.affiliation_id  order by count(*) asc
select author.name from Author_list join Author on Author_list.author_id = Author.author_id  group by author.name having  count(*) > 50
select author.name from Author_list join Author on Author_list.author_id = Author.author_id  group by author.name having  count(*) > 50
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id  group by author_list.author_id having  count(*) = 1
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id  group by author.name having  count(*) = 1
select paper.venue , paper.year from Paper  group by paper.venue, paper.year  order by count(*) desc limit 1
select paper.venue , paper.year from Paper  group by paper.venue, paper.year  order by count(*) desc limit 1
select paper.venue from Paper  group by paper.venue  order by count(*) asc limit 1
select paper.venue from Paper  group by paper.venue  order by count(*) asc limit 1
select count(*) from Citation where  citation.cited_paper_id = "A00-1002"
select count(*) from Citation where  citation.cited_paper_id = "A00-1002"
select count(*) from Citation join Paper on Citation.cited_paper_id = Paper.paper_id where  paper.paper_id = "D12-1027"
select count(*) from Citation join Paper on Citation.cited_paper_id = Paper.paper_id where  paper.paper_id = "D12-1027"
select citation.paper_id , count(*) from Citation  group by citation.paper_id  order by count(*) desc limit 1
select citation.paper_id , count(*) from Citation  group by citation.paper_id  order by count(*) desc limit 1
select paper.title from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.cited_paper_id  order by count(*) desc limit 1
select paper.title from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.cited_paper_id  order by count(*) desc limit 1
select paper.title , count(*) from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.cited_paper_id  order by count(*) desc limit 10
select paper.title , count(*) from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.cited_paper_id  order by count(*) desc limit 10
select count(*) from Citation where  citation.cited_paper_id in (select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"   )
select count(*) from Citation where  citation.cited_paper_id in (select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"   )
select count(*) from Citation where  citation.cited_paper_id in (select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"   )
select count(*) from Citation where  citation.cited_paper_id in (select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select Paper.paper_id from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"   )
select author.name , count(*) from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id join Citation on Paper.paper_id = Citation.cited_paper_id  group by author.author_id  order by count(*) desc limit 1
select author.name , count(*) from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id join Citation on Paper.paper_id = Citation.cited_paper_id  group by author.author_id  order by count(*) desc limit 1
select paper.venue , paper.year from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select paper.venue , paper.year from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"
select paper.venue , paper.year from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown"   intersect select paper.venue , paper.year from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Kathleen"
select paper.venue , paper.year from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University"
select paper.venue , paper.year from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University"
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009  group by author.name  order by count(*) desc limit 1
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009  group by author.name  order by count(*) desc limit 1
select affiliation.name from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009  group by affiliation.name  order by count(*) desc limit 3
select affiliation.name from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009  group by affiliation.name  order by count(*) desc limit 3
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University" and paper.year <= 2009
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Columbia University" and paper.year <= 2009
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Stanford University" and paper.year between 2000 and 2009
select count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.name = "Stanford University" and paper.year between 2000 and 2009
select paper.title from Author_list join Paper on Author_list.paper_id = Paper.paper_id  group by author_list.paper_id  order by count(*) desc limit 1
select paper.title from Author_list join Paper on Author_list.paper_id = Paper.paper_id  group by author_list.paper_id  order by count(*) desc limit 1
select count(*) from Author_list where  author_list.author_id in (select Author.author_id from Author where  author.name = "Mckeown"   intersect select Author.author_id from Author where  author.name = "Kathleen"   )
select count(*) from Author_list join Author on Author_list.author_id = Author.author_id where  author.name = "Mckeown" and author.email = "kathleen"
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  author.name = "Mckeown" and author.email = "kathleen"  group by author.name  order by count(*) desc limit 1
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.title = "Mckeown , Kathleen"  group by author.name  order by count(*) desc limit 1
select paper.paper_id from Paper where  paper.title like "%translation%"
select paper.paper_id from Paper where  paper.title like "%translation%"
select paper.paper_id , paper.title from Paper   except select paper.paper_id , paper.title from Citation join Paper on Citation.cited_paper_id = Paper.paper_id
select paper.paper_id , paper.title from Paper where  paper.paper_id not in (select Citation.cited_paper_id from Citation  )
select affiliation.name from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id where  affiliation.address like "%China%"  group by affiliation.affiliation_id  order by count(*) desc limit 1
select affiliation.name from Affiliation where  affiliation.address like "%China%"  group by affiliation.affiliation_id  order by count(*) desc limit 1
select count(*) , paper.year from Paper  group by paper.year
select paper.venue , count(*) from Paper  group by paper.venue, paper.year
select affiliation.name , count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id  group by affiliation.affiliation_id
select affiliation.name , count(*) from Author_list join Affiliation on Author_list.affiliation_id = Affiliation.affiliation_id join Paper on Author_list.paper_id = Paper.paper_id  group by affiliation.affiliation_id
select paper.title from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.paper_id having  count(*) > 50
select paper.title from Citation join Paper on Citation.cited_paper_id = Paper.paper_id  group by citation.paper_id having  count(*) > 50
select count(*) from Author_list where  author_list.paper_id not in (select Citation.paper_id from Citation  group by Citation.paper_id having  count(*) > 50 )
select count(*) from Author_list where  author_list.paper_id not in (select Citation.paper_id from Citation  group by Citation.paper_id having  count(*) > 50 )
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.venue = "NAACL"   intersect select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.venue = "ACL" and paper.year = 2009
select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009 and paper.venue = "NAACL"   intersect select author.name from Author_list join Author on Author_list.author_id = Author.author_id join Paper on Author_list.paper_id = Paper.paper_id where  paper.year = 2009 and paper.venue = "ACL"
select author.name from Author where  author.author_id not in (select Author_list.author_id from Author_list join Paper on Author_list.paper_id = Paper.paper_id where  paper.venue = "ACL"  )
select author.name from Author where  author.author_id not in (select Author_list.author_id from Author_list join Paper on Author_list.paper_id = Paper.paper_id where  paper.venue = "ACL"  )
select count(*) from conference
select count(*) from conference
select distinct conference.conference_name from conference
select distinct conference.conference_name from conference
select conference.conference_name , conference.year , conference.location from conference
select conference.conference_name , conference.year , conference.location from conference
select conference.conference_name , count(*) from conference  group by conference.conference_name
select conference.conference_name , count(*) from conference  group by conference.conference_name
select conference.year , count(*) from conference  group by conference.year
select count(*) , conference.year from conference  group by conference.year
select conference.year from conference  group by conference.year  order by count(*) asc limit 1
select conference.year from conference  group by conference.year  order by count(*) asc limit 1
select conference.location from conference  group by conference.location having  count(*) >= 2
select conference.location from conference  group by conference.location having  count(*) >= 2
select institution.institution_name , institution.location , institution.founded from institution
select institution.institution_name , institution.location , institution.founded from institution
select count(*) from institution where  institution.founded between 1850 and 1900
select count(*) from institution where  institution.founded between 1850 and 1900
select institution.institution_name , institution.location from institution   order by institution.founded desc limit 1
select institution.institution_name , institution.location from institution   order by institution.founded desc limit 1
select institution.institution_name , count(*) from staff join institution on staff.Institution_ID = institution.Institution_ID where  institution.founded > 1800  group by staff.institution_id
select institution.institution_name , count(*) from staff join institution on staff.Institution_ID = institution.Institution_ID where  institution.founded > 1800  group by staff.institution_id
select institution.institution_name from institution where  institution.institution_id not in (select staff.Institution_ID from staff  )
select institution.institution_name from institution where  institution.institution_id not in (select staff.Institution_ID from staff  )
select staff.name from staff where  staff.age > (select avg(staff.age) from staff  )
select staff.name from staff where  staff.age > (select avg(staff.age) from staff  )
select max(staff.age) , min(staff.age) from staff where  staff.nationality = "United States"
select max(staff.age) , min(staff.age) from staff
select conference.conference_name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  staff.nationality = "Canada"
select conference.conference_name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  staff.nationality = "Canada"
select staff.name from conference_participation join staff on conference_participation.staff_ID = staff.staff_ID where  conference_participation.role = "Speaker"   intersect select staff.name from conference_participation join staff on conference_participation.staff_ID = staff.staff_ID where  conference_participation.role = "Sponsor"
select staff.name from conference_participation join staff on conference_participation.staff_ID = staff.staff_ID where  conference_participation.role = "Speaker"   intersect select staff.name from conference_participation join staff on conference_participation.staff_ID = staff.staff_ID where  conference_participation.role = "Sponsor"
select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.conference_name = "ACL"   intersect select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.conference_name = "Naccl"
select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.conference_name = "ACL"   intersect select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.conference_name = "Naccl"
select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.year = 2003 or conference.year = 2004
select staff.name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID where  conference.year >= 2003 or conference.year <= 2004
select conference.conference_name , conference.year , count(*) from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID  group by conference.conference_name
select conference.conference_name , conference.year , count(*) from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID  group by conference.conference_id
select conference.conference_name from conference   order by conference.conference_name desc limit 2
select conference.conference_name from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID  group by conference.conference_name  order by count(*) desc limit 2
select staff.name , staff.nationality from staff where  staff.staff_id not in (select conference_participation.staff_ID from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID where  conference.conference_name = "ACL"  )
select staff.name , staff.nationality from staff where  staff.staff_id not in (select conference_participation.staff_ID from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID where  conference.conference_name = "ACL"  )
select institution.institution_name , institution.location from institution   except select institution.institution_name , institution.location from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID join institution on staff.Institution_ID = institution.Institution_ID where  conference.year = 2004
select institution.institution_name , institution.location from institution   except select institution.institution_name , institution.location from conference_participation join conference on conference_participation.Conference_ID = conference.Conference_ID join staff on conference_participation.staff_ID = staff.staff_ID join institution on staff.Institution_ID = institution.Institution_ID where  conference.year = 2004
select pilotskills.pilot_name from PilotSkills   order by pilotskills.age desc limit 1
select pilotskills.pilot_name from PilotSkills   order by pilotskills.age desc limit 1
select pilotskills.pilot_name from PilotSkills where  pilotskills.age < (select avg(pilotskills.age) from PilotSkills  )
select pilotskills.pilot_name from PilotSkills where  pilotskills.age < (select avg(pilotskills.age) from PilotSkills  )   order by pilotskills.age asc
select * from PilotSkills where  pilotskills.age < 30
select * from PilotSkills where  pilotskills.age < 30
select pilotskills.pilot_name from PilotSkills where  pilotskills.plane_name = "Piper Cub" and pilotskills.age < 35
select pilotskills.pilot_name from PilotSkills where  pilotskills.age < 35 and pilotskills.plane_name = "Piper Cub"
select hangar.location from Hangar where  hangar.plane_name = "F-14 Fighter"
select hangar.location from Hangar where  hangar.plane_name = "F-14 Fighter"
select count( distinct hangar.location) from Hangar
select count( distinct hangar.location) from Hangar
select pilotskills.plane_name from PilotSkills where  pilotskills.pilot_name = "Jones" and pilotskills.age = 32
select pilotskills.plane_name from PilotSkills where  pilotskills.pilot_name = "Jones" and pilotskills.age = 32
select count(*) from PilotSkills where  pilotskills.age > 40
select count(*) from PilotSkills where  pilotskills.age > 40
select count(*) from PilotSkills where  pilotskills.plane_name = "B-52 Bomber" and pilotskills.age < 35
select count(*) from PilotSkills where  pilotskills.plane_name = "B-52" and pilotskills.age < 35
select pilotskills.pilot_name from PilotSkills where  pilotskills.plane_name = "Piper Cub" and pilotskills.age = (select min(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "Piper Cub"  )
select pilotskills.pilot_name from PilotSkills where  pilotskills.plane_name = "Piper Cub"   order by pilotskills.age asc limit 1
select pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name  order by count(*) desc limit 1
select pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name  order by count(*) desc limit 1
select pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name  order by count(*) asc limit 1
select pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name  order by count(*) asc limit 1
select count(*) from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Chicago"
select count(*) from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Chicago"
select pilotskills.plane_name from PilotSkills where  pilotskills.pilot_name = "Smith" and pilotskills.age = 41
select pilotskills.plane_name from PilotSkills where  pilotskills.pilot_name = "Smith" and pilotskills.age = 41
select count( distinct pilotskills.plane_name) from PilotSkills
select count( distinct pilotskills.plane_name) from PilotSkills
select count(*) from PilotSkills where  pilotskills.pilot_name = "Smith"
select count(*) from PilotSkills where  pilotskills.pilot_name = "Smith"
select count(*) from PilotSkills where  pilotskills.age > 40
select count(*) from PilotSkills where  pilotskills.age > 40
select pilotskills.pilot_name from PilotSkills where  pilotskills.age between 30 and 40   order by pilotskills.age asc
select pilotskills.pilot_name from PilotSkills where  pilotskills.age between 30 and 40   order by pilotskills.age asc
select pilotskills.pilot_name from PilotSkills   order by pilotskills.age desc
select pilotskills.pilot_name from PilotSkills   order by pilotskills.age desc
select hangar.location from Hangar   order by hangar.plane_name asc
select hangar.location from Hangar   order by hangar.plane_name asc
select distinct pilotskills.plane_name from PilotSkills   order by pilotskills.plane_name asc
select distinct pilotskills.plane_name from PilotSkills   order by pilotskills.plane_name asc
select count(*) from PilotSkills where  pilotskills.age > 40 or pilotskills.age < 30
select count(*) from PilotSkills where  pilotskills.age > 40 or pilotskills.age < 30
select pilotskills.pilot_name , pilotskills.age from PilotSkills where  pilotskills.plane_name = "Piper Cub" and pilotskills.age > 35   union select pilotskills.pilot_name , pilotskills.age from PilotSkills where  pilotskills.plane_name = "F-14 Fighter" and pilotskills.age < 30
select pilotskills.pilot_name , pilotskills.age from PilotSkills where  pilotskills.plane_name = "Piper Cub" and pilotskills.age > 35   union select pilotskills.pilot_name , pilotskills.age from PilotSkills where  pilotskills.plane_name = "F-14 Fighter" and pilotskills.age < 30
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "Piper Cub"   except select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "B-52 Bomber"
select pilotskills.pilot_name from PilotSkills where  pilotskills.plane_name = "Piper Cub"   except select pilotskills.pilot_name from PilotSkills where  pilotskills.plane_name = "B-52 Bomber"
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "Piper Cub"   intersect select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "B-52 Bomber"
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "Piper Cub"   intersect select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "B-52 Bomber"
select avg(pilotskills.age) , min(pilotskills.age) from PilotSkills
select avg(pilotskills.age) , min(pilotskills.age) from PilotSkills
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Austin"   intersect select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Boston"
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Austin"   intersect select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Boston"
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "Piper Cub" or hangar.plane_name = "F-14 Fighter"
select pilotskills.pilot_name from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "Piper Cub" or hangar.plane_name = "F-14 Fighter"
select avg(pilotskills.age) , pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name
select avg(pilotskills.age) , pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name
select count(*) , pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name
select count(*) , pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name
select pilotskills.plane_name , max(pilotskills.age) from PilotSkills  group by pilotskills.plane_name  order by pilotskills.plane_name asc
select pilotskills.plane_name , max(pilotskills.age) from PilotSkills  group by pilotskills.plane_name  order by pilotskills.plane_name asc
select pilotskills.plane_name , max(pilotskills.age) from PilotSkills  group by pilotskills.plane_name
select pilotskills.plane_name , pilotskills.pilot_name from PilotSkills   order by pilotskills.age desc limit 1
select max(pilotskills.age) , pilotskills.pilot_name from PilotSkills where  pilotskills.pilot_name = "me"  group by pilotskills.pilot_name
select pilotskills.pilot_name , max(pilotskills.age) from PilotSkills  group by pilotskills.pilot_name
select count(*) , avg(pilotskills.age) , hangar.location from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name  group by hangar.location
select count(*) , avg(pilotskills.age) , hangar.location from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name  group by hangar.location
select count(*) , pilotskills.plane_name from PilotSkills  group by pilotskills.plane_name having  avg(pilotskills.age) < 35
select pilotskills.plane_name , count(*) from PilotSkills  group by pilotskills.plane_name having  avg(pilotskills.age) < 35
select hangar.location from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name   order by pilotskills.age asc limit 1
select hangar.location from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name   order by pilotskills.age asc limit 1
select pilotskills.pilot_name , pilotskills.age from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Austin"
select pilotskills.pilot_name , pilotskills.age from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.location = "Austin"
select pilotskills.pilot_name from PilotSkills where  pilotskills.age > (select min(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "Piper Cub"  )    order by pilotskills.pilot_name asc
select pilotskills.pilot_name from PilotSkills where  pilotskills.age > (select max(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "Piper Cub"  )    order by pilotskills.pilot_name asc
select count(*) from PilotSkills where  pilotskills.age < (select min(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "F-14 Fighter"  )
select count(*) from PilotSkills where  pilotskills.age < (select max(pilotskills.age) from PilotSkills join Hangar on PilotSkills.plane_name = Hangar.plane_name where  hangar.plane_name = "F-14 Fighter"  )
select distinct pilotskills.plane_name from PilotSkills where  pilotskills.plane_name like "%Bomber%"
select distinct pilotskills.plane_name from PilotSkills where  pilotskills.plane_name like "%Bomber%"
select count(*) from PilotSkills where  pilotskills.age > (select min(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "Piper Cub"  )
select count(*) from PilotSkills where  pilotskills.age > (select min(pilotskills.age) from PilotSkills where  pilotskills.plane_name = "Piper Cub"  )
select district.name from district   order by district.area_km desc limit 1
select district.area_km , district.government_website from district   order by district.population asc limit 1
select district.name , district.population from district where  district.area_km > (select avg(district.area_km) from district  )
select max(district.area_km) , avg(district.area_km) from district
select sum(district.population) from district   order by district.area_km desc limit 3
select district.district_id , district.name , district.government_website from district   order by district.population asc
select district.name from district where  district.government_website like "%gov%"
select district.district_id , district.name from district where  district.population > 4000 or district.area_km > 3000
select spokesman.name , spokesman.speach_title from spokesman
select avg(spokesman.points) , avg(spokesman.age) from spokesman where  spokesman.rank_position = 1
select spokesman.name , spokesman.points from spokesman where  spokesman.age < 40
select spokesman.name from spokesman   order by spokesman.age desc limit 1
select spokesman.name from spokesman where  spokesman.points < (select avg(spokesman.points) from spokesman  )
select district.name from spokesman_district join district on spokesman_district.District_ID = district.District_ID  group by spokesman_district.district_id  order by count(*) desc limit 1
select spokesman.name from spokesman_district join spokesman on spokesman_district.Spokesman_ID = spokesman.Spokesman_ID where  spokesman_district.start_year < 2004
select count(*) , district.name from spokesman_district join district on spokesman_district.District_ID = district.District_ID  group by spokesman_district.district_id
select district.name from spokesman_district join district on spokesman_district.District_ID = district.District_ID join spokesman on spokesman_district.Spokesman_ID = spokesman.Spokesman_ID where  spokesman.rank_position = 1   intersect select district.name from spokesman_district join district on spokesman_district.District_ID = district.District_ID join spokesman on spokesman_district.Spokesman_ID = spokesman.Spokesman_ID where  spokesman.rank_position = 2
select district.name from spokesman_district join district on spokesman_district.District_ID = district.District_ID  group by spokesman_district.district_id having  count(*) > 1
select count(*) from spokesman_district where  spokesman_district.spokesman_id not in (select spokesman_district.Spokesman_ID from spokesman_district  )
select spokesman.name from spokesman where  spokesman.spokesman_id not in (select spokesman_district.Spokesman_ID from spokesman_district  )
select sum(district.population) , avg(district.population) from spokesman_district join district on spokesman_district.District_ID = district.District_ID
select sculptures.title from Sculptures   order by sculptures.year desc limit 1
select sculptures.title from Sculptures   order by sculptures.year desc limit 1
select paintings.title , paintings.location from Paintings   order by paintings.year asc limit 1
select paintings.title , paintings.location from Paintings   order by paintings.year asc limit 1
select sculptures.title from Sculptures where  sculptures.location = "Gallery 226"
select sculptures.title from Sculptures where  sculptures.location = "Gallery 226"
select paintings.title , paintings.location from Paintings
select paintings.title , paintings.location from Paintings
select sculptures.title , sculptures.location from Sculptures
select sculptures.title , sculptures.location from Sculptures
select distinct paintings.medium from Paintings where  paintings.paintingid = 80
select paintings.medium from Paintings where  paintings.paintingid = 80
select artists.fname , artists.lname from Artists where  artists.birthyear > 1850
select artists.fname , artists.lname from Artists where  artists.birthyear > 1850
select sculptures.title , sculptures.year from Sculptures where  sculptures.location != "Gallery 226"
select sculptures.title , sculptures.year from Sculptures where  sculptures.location != "Gallery 226"
select distinct artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.year < 1900
select distinct artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.year < 1900
select distinct artists.birthyear from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.year > 1920
select distinct artists.birthyear from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.year > 1920
select artists.fname , artists.lname from Artists   order by artists.deathyear desc limit 1
select artists.fname , artists.lname from Artists   order by artists.deathyear desc limit 1
select artists.birthyear from Artists   order by artists.deathyear asc limit 1
select artists.birthyear from Artists   order by artists.deathyear asc limit 1
select artists.fname , artists.birthyear from Artists   order by artists.deathyear desc limit 1
select artists.fname , artists.birthyear from Artists   order by artists.deathyear desc limit 1
select count(*) from Paintings where  paintings.location = "Gallery 240"
select count(*) from Paintings where  paintings.location = "Gallery 240"
select count(*) from Paintings join Artists on Paintings.painterID = Artists.artistID   order by artists.deathyear desc limit 1
select count(*) from Paintings join Artists on Paintings.painterID = Artists.artistID   order by artists.deathyear desc limit 1
select paintings.title , paintings.year from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.fname = "Mary"
select paintings.title , paintings.year from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.fname = "Mary"
select paintings.width_mm from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.birthyear < 1850
select paintings.width_mm from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.birthyear < 1850
select paintings.location , paintings.medium from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.fname = "Pablo"
select paintings.location , paintings.mediumon from Paintings join Artists on Paintings.painterID = Artists.artistID where  artists.fname = "Pablo"
select artists.fname , artists.lname from Artists   union select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID
select artists.fname , artists.lname from Artists   union select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID
select artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "oil"   intersect select artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "lithograph"
select artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "oil"   intersect select artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "lithograph"
select artists.birthyear from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.year = 1884 and paintings.mediumon = "canvas"
select artists.birthyear from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.year = 1884
select distinct artists.fname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "oil" and paintings.location = "Gallery 241"
select artists.fname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.location = "Gallery 241" and paintings.medium = "oil"
select sculptures.medium , count(*) from Sculptures  group by sculptures.medium
select count(*) , paintings.medium from Paintings  group by paintings.medium
select avg(paintings.height_mm) , paintings.medium from Paintings  group by paintings.medium
select avg(paintings.height_mm) , paintings.medium from Paintings  group by paintings.medium
select count(*) , paintings.location from Paintings where  paintings.year < 1900  group by paintings.location
select count(*) , paintings.location from Paintings where  paintings.year < 1900  group by paintings.location
select paintings.title from Paintings where  paintings.year > 1910 and paintings.medium = "oil"
select paintings.title from Paintings where  paintings.medium = "oil" and paintings.year > 1910
select distinct paintings.painterid from Paintings where  paintings.medium = "oil" and paintings.location = "Gallery 240"
select distinct paintings.painterid from Paintings where  paintings.medium = "oil" and paintings.location = "Gallery 240"
select distinct paintings.title from Paintings where  paintings.height_mm > (select min(paintings.height_mm) from Paintings where  paintings.mediumon = "canvas"  )
select distinct paintings.title from Paintings where  paintings.height_mm > (select min(paintings.height_mm) from Paintings where  paintings.mediumon = "canvas"  )
select distinct paintings.paintingid from Paintings where  paintings.year < (select min(paintings.year) from Paintings where  paintings.location = "Gallery 240"  )
select distinct paintings.paintingid from Paintings where  paintings.year < (select min(paintings.year) from Paintings where  paintings.location = "Gallery 240"  )
select paintings.paintingid from Paintings   order by paintings.year asc limit 1
select paintings.paintingid from Paintings   order by paintings.year asc limit 1
select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.title like "%female%"
select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID where  sculptures.title like "%female%"
select distinct paintings.title from Paintings   order by paintings.title asc
select distinct paintings.title from Paintings   order by paintings.title asc
select distinct paintings.title from Paintings   order by paintings.width_mm asc
select distinct paintings.title from Paintings   order by paintings.height_mm asc
select paintings.title , sculptures.title from Paintings join Artists on Paintings.painterID = Artists.artistID join Sculptures on Artists.artistID = Sculptures.sculptorID where  sculptures.year between 1900 and 1950
select paintings.title from Paintings join Artists on Paintings.painterID = Artists.artistID join Sculptures on Artists.artistID = Sculptures.sculptorID where  sculptures.year between 1900 and 1950
select paintings.title , sculptures.title from Paintings join Artists on Paintings.painterID = Artists.artistID join Sculptures on Artists.artistID = Sculptures.sculptorID where  artists.artistid = 222
select paintings.title , sculptures.title from Paintings join Artists on Paintings.painterID = Artists.artistID join Sculptures on Artists.artistID = Sculptures.sculptorID where  artists.artistid = 222
select artists.artistid from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.year < 1900  group by artists.artistid  order by count(*) desc limit 1
select artists.artistid from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.year < 1900  group by artists.artistid  order by count(*) desc limit 1
select artists.fname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID  group by artists.fname  order by count(*) desc limit 1
select artists.fname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID  group by sculptures.sculptorid  order by count(*) desc limit 1
select paintings.title from Paintings where  paintings.width_mm < 600 or paintings.height_mm > 800
select paintings.title from Paintings where  paintings.width_mm < 600 or paintings.height_mm > 800
select paintings.location from Paintings where  paintings.year < 1885 or paintings.year > 1930
select paintings.location from Paintings where  paintings.year < 1885 or paintings.year > 1930
select paintings.paintingid from Paintings where  paintings.height_mm between 500 and 2000
select paintings.paintingid from Paintings where  paintings.height_mm > 500 and paintings.width_mm < 2000
select paintings.location from Paintings where  paintings.mediumon = "panel"   intersect select paintings.location from Paintings where  paintings.mediumon = "canvas"
select paintings.location from Paintings where  paintings.mediumon = "panel"   intersect select paintings.location from Paintings where  paintings.mediumon = "canvas"
select paintings.location from Paintings where  paintings.year < 1885   intersect select paintings.location from Paintings where  paintings.year > 1930
select paintings.location from Paintings where  paintings.year < 1885   intersect select paintings.location from Paintings where  paintings.year > 1930
select avg(paintings.height_mm) , avg(paintings.width_mm) from Paintings where  paintings.medium = "oil" and paintings.location = "Gallery 241"
select avg(paintings.height_mm) , avg(paintings.width_mm) from Paintings where  paintings.location = "Gallery 241" and paintings.medium = "oil"
select max(paintings.height_mm) , max(paintings.paintingid) from Paintings where  paintings.year < 1900
select paintings.height_mm , paintings.paintingid from Paintings where  paintings.year < 1900   order by paintings.height_mm desc limit 1
select max(paintings.height_mm) , max(paintings.width_mm) , paintings.year from Paintings  group by paintings.year
select max(paintings.height_mm) , max(paintings.width_mm) , paintings.year from Paintings  group by paintings.year
select avg(paintings.height_mm) , avg(paintings.width_mm) , artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID  group by artists.fname, artists.lname  order by artists.fname asc
select avg(paintings.height_mm) , avg(paintings.width_mm) , paintings.painterid from Paintings  group by paintings.painterid  order by paintings.title asc
select artists.fname , count(*) from Paintings join Artists on Paintings.painterID = Artists.artistID  group by artists.fname having  count(*) >= 2
select artists.fname , count(*) from Paintings join Artists on Paintings.painterID = Artists.artistID  group by artists.fname having  count(*) >= 2
select artists.deathyear from Paintings join Artists on Paintings.painterID = Artists.artistID  group by artists.artistid having  count(*) <= 3
select artists.deathyear from Paintings join Artists on Paintings.painterID = Artists.artistID  group by artists.artistid having  count(*) < 4
select artists.deathyear from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID  group by artists.deathyear  order by count(*) asc limit 1
select artists.deathyear from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID  group by artists.artistid  order by count(*) asc limit 1
select paintings.paintingid , paintings.height_mm from Paintings where  paintings.location = "Gallery 240"   order by paintings.width_mm desc limit 1
select paintings.height_mm , paintings.paintingid from Paintings where  paintings.location = "Gallery 240"   order by paintings.width_mm desc limit 1
select paintings.paintingid from Paintings where  paintings.year < (select max(paintings.year) from Paintings where  paintings.location = "Gallery 240"  )
select paintings.paintingid from Paintings where  paintings.year < (select min(paintings.year) from Paintings where  paintings.location = "Gallery 240"  )
select paintings.paintingid from Paintings where  paintings.height_mm > (select max(paintings.height_mm) from Paintings where  paintings.year > 1900  )
select paintings.paintingid from Paintings where  paintings.height_mm > (select max(paintings.height_mm) from Paintings where  paintings.year > 1900  )
select artists.fname , artists.lname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "oil"  group by artists.fname, artists.lname  order by count(*) desc limit 3
select artists.fname from Paintings join Artists on Paintings.painterID = Artists.artistID where  paintings.medium = "oil"  group by artists.fname  order by count(*) desc limit 1
select paintings.paintingid , paintings.location , paintings.title from Paintings where  paintings.medium = "oil"   order by paintings.year asc
select paintings.paintingid , paintings.location , paintings.title from Paintings where  paintings.medium = "oil"   order by paintings.year asc
select paintings.year , paintings.location , paintings.title from Paintings where  paintings.height_mm > 1000   order by paintings.title asc
select paintings.year , paintings.location , paintings.title from Paintings where  paintings.height_mm > 1000   order by paintings.title asc
select artists.fname , artists.lname from Artists   except select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID
select artists.fname , artists.lname from Artists   except select artists.fname , artists.lname from Sculptures join Artists on Sculptures.sculptorID = Artists.artistID
select paintings.location from Paintings where  paintings.year < 1885   except select paintings.location from Paintings where  paintings.mediumon = "canvas"
select * from Paintings where  paintings.year < 1885 and paintings.mediumon != "canvas"
select count(*) from race
select count(*) from race
select race.winning_driver , race.winning_team from race   order by race.winning_team asc
select race.winning_driver , race.winning_team from race   order by race.winning_team asc
select race.winning_driver from race where  race.pole_position != "Junior Strous"
select race.winning_driver from race where  race.pole_position != "Junior Strous"
select driver.constructor from driver   order by driver.age asc
select distinct driver.constructor from driver   order by driver.age asc
select distinct driver.entrant from driver where  driver.age >= 20
select distinct driver.entrant from driver where  driver.age >= 20
select max(driver.age) , min(driver.age) from driver
select max(driver.age) , min(driver.age) from driver
select count( distinct driver.engine) from driver where  driver.age > 30 or driver.age < 20
select count( distinct driver.engine) from driver where  driver.age > 30 or driver.age < 20
select driver.driver_name from driver   order by driver.driver_name desc
select driver.driver_name from driver   order by driver.driver_name desc
select driver.driver_name , race.race_name from race join driver on race.Driver_ID = driver.Driver_ID
select driver.driver_name , race.race_name from race join driver on race.Driver_ID = driver.Driver_ID
select driver.driver_name , count(*) from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id
select driver.driver_name , count(*) from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id
select driver.age from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id  order by count(*) desc limit 1
select driver.age from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id  order by count(*) desc limit 1
select driver.driver_name , driver.age from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id having  count(*) >= 2
select driver.driver_name , driver.age from race join driver on race.Driver_ID = driver.Driver_ID  group by race.driver_id having  count(*) >= 2
select race.race_name from race join driver on race.Driver_ID = driver.Driver_ID where  driver.age >= 26
select race.race_name from race join driver on race.Driver_ID = driver.Driver_ID where  driver.age >= 26
select driver.driver_name from driver where  driver.constructor != "Bugatti"
select driver.driver_name from driver where  driver.constructor != "Bugatti"
select driver.constructor , count(*) from driver  group by driver.constructor
select driver.constructor , count(*) from driver  group by driver.constructor
select driver.engine from driver  group by driver.engine  order by count(*) desc limit 1
select driver.engine from driver  group by driver.engine  order by count(*) desc limit 1
select driver.engine from driver  group by driver.engine having  count(*) >= 2
select driver.engine from driver  group by driver.engine having  count(*) >= 2
select driver.driver_name from driver where  driver.driver_id not in (select race.Driver_ID from race  )
select driver.driver_name from driver where  driver.driver_id not in (select race.Driver_ID from race  )
select driver.constructor from driver where  driver.age < 20   intersect select driver.constructor from driver where  driver.age > 30
select driver.constructor from driver where  driver.age < 20   intersect select driver.constructor from driver where  driver.age > 30
select race.winning_team from race  group by race.winning_team having  count(*) > 1
select race.winning_team from race  group by race.winning_team having  count(*) > 1
select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "James Hinchcliffe"   intersect select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "Carl Skerlong"
select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "James Hinchcliffe"   intersect select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "Carl Skerlong"
select driver.driver_name from driver   except select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "James Hinchcliffe"
select driver.driver_name from driver   except select driver.driver_name from race join driver on race.Driver_ID = driver.Driver_ID where  race.pole_position = "James Hinchcliffe"
select count(*) from languages
select count(*) from languages
select languages.name from languages   order by languages.name asc
select languages.name from languages   order by languages.name asc
select languages.name from languages where  languages.name like "%ish%"
select languages.name from languages where  languages.name like "%ish%"
select countries.name from countries   order by countries.overall_score desc
select countries.name from countries   order by countries.overall_score desc
select avg(countries.justice_score) from countries
select avg(countries.justice_score) from countries
select max(countries.health_score) , min(countries.health_score) from countries where  countries.name != "Norway"
select max(countries.health_score) , min(countries.health_score) from countries where  countries.name != "Norway"
select count( distinct official_languages.language_id) from official_languages
select count( distinct official_languages.language_id) from official_languages
select countries.name from countries   order by countries.education_score desc
select countries.name from countries   order by countries.education_score desc
select countries.name from countries   order by countries.politics_score desc limit 1
select countries.name from countries   order by countries.politics_score desc limit 1
select countries.name , official_languages.language_id from official_languages join countries on official_languages.country_id = countries.id
select countries.name , languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id
select languages.name , count(*) from official_languages join languages on official_languages.language_id = languages.id  group by official_languages.language_id
select languages.name , count(*) from official_languages join languages on official_languages.language_id = languages.id  group by languages.name
select official_languages.language_id from official_languages  group by official_languages.language_id  order by count(*) desc limit 1
select official_languages.language_id from official_languages  group by official_languages.language_id  order by count(*) desc limit 1
select languages.name from official_languages join languages on official_languages.language_id = languages.id  group by official_languages.language_id having  count(*) >= 2
select official_languages.language_id from official_languages  group by official_languages.language_id having  count(*) >= 2
select avg(countries.overall_score) from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  languages.name = "English"
select avg(countries.overall_score) from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  languages.name = "English"
select languages.name from official_languages join languages on official_languages.language_id = languages.id  group by official_languages.language_id  order by count(*) desc limit 3
select languages.name from official_languages join languages on official_languages.language_id = languages.id  group by official_languages.language_id  order by count(*) desc limit 3
select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id  group by official_languages.language_id  order by avg(countries.overall_score) desc
select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id  group by official_languages.country_id  order by avg(countries.overall_score) desc
select countries.name from official_languages join countries on official_languages.country_id = countries.id  group by official_languages.country_id  order by count(*) desc limit 1
select countries.name from official_languages join countries on official_languages.country_id = countries.id  group by official_languages.country_id  order by count(*) desc limit 1
select languages.name from languages where  languages.id not in (select official_languages.language_id from official_languages  )
select languages.name from languages where  languages.id not in (select official_languages.language_id from official_languages  )
select countries.name from countries where  countries.id not in (select official_languages.country_id from official_languages  )
select countries.name from countries where  countries.id not in (select official_languages.country_id from official_languages  )
select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  countries.overall_score > 95   intersect select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  countries.overall_score < 90
select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  countries.overall_score > 95   intersect select languages.name from official_languages join countries on official_languages.country_id = countries.id join languages on official_languages.language_id = languages.id where  countries.overall_score < 90
select addresses.country , addresses.town_city from Addresses
select addresses.country , addresses.town_city from Addresses
select addresses.county_state_province from Addresses
select addresses.county_state_province , properties.property_name from Properties join Addresses on Properties.property_address_id = Addresses.address_id
select features.feature_description from Features where  features.feature_name = "rooftop"
select features.feature_description from Features where  features.feature_name = "rooftop"
select features.feature_name , features.feature_description from Property_Features join Features on Property_Features.feature_id = Features.feature_id  group by property_features.feature_id  order by count(*) desc limit 1
select features.feature_name , features.feature_description from Property_Features join Features on Property_Features.feature_id = Features.feature_id  group by property_features.feature_id  order by count(*) desc limit 1
select min(properties.room_count) from Properties
select min(properties.room_count) from Properties
select count(*) from Properties where  properties.parking_lots = 1 or properties.garage_yn = 1
select count(*) from Properties where  properties.parking_lots = 1 or properties.garage_yn = 1
select users.age_category_code from Ref_User_Categories join Users on Ref_User_Categories.user_category_code = Users.user_category_code where  ref_user_categories.user_category_description like "%Mother%"
select ref_age_categories.age_category_description from Ref_Age_Categories where  ref_age_categories.age_category_description like "%Mother%"
select users.first_name from Properties join Users on Properties.owner_user_id = Users.user_id  group by properties.owner_user_id  order by count(*) desc limit 1
select users.first_name from Properties join Users on Properties.owner_user_id = Users.user_id  group by properties.owner_user_id  order by count(*) desc limit 1
select avg(properties.room_count) from Properties where  properties.property_name = "Garden"
select avg(properties.room_count) from Properties where  properties.property_name = "garden"
select addresses.town_city from Properties join Addresses on Properties.property_address_id = Addresses.address_id join Property_Features on Properties.property_id = Property_Features.property_id join Features on Property_Features.feature_id = Features.feature_id where  features.feature_name = "swimming pool"
select distinct addresses.town_city from Property_Features join Properties on Property_Features.property_id = Properties.property_id join Addresses on Properties.property_address_id = Addresses.address_id where  property_features.feature_value = "Swimming Pool"
select properties.property_id , properties.vendor_requested_price from Properties   order by properties.vendor_requested_price asc limit 1
select properties.property_id , properties.vendor_requested_price from Properties   order by properties.vendor_requested_price asc limit 1
select avg(properties.room_count) from Properties
select avg(properties.room_count) from Properties
select count( distinct rooms.room_size) from Rooms
select count( distinct rooms.room_size) from Rooms
select user_searches.user_id , user_searches.search_string from User_Searches  group by user_searches.user_id having  count(*) >= 2
select user_searches.user_id , user_searches.search_seq from User_Searches  group by user_searches.user_id having  count(*) >= 2
select max(user_searches.search_datetime) from User_Searches
select user_searches.search_datetime from User_Searches   order by user_searches.search_datetime desc limit 1
select user_searches.search_datetime , user_searches.search_string from User_Searches   order by user_searches.search_string desc
select user_searches.search_string , user_searches.search_datetime from User_Searches   order by user_searches.search_string desc
select addresses.zip_postcode from Properties join Addresses on Properties.property_address_id = Addresses.address_id where  properties.owner_user_id not in (select Properties.owner_user_id from Properties  group by Properties.owner_user_id having  count(*) <= 2 )   group by properties.owner_user_id
select addresses.zip_postcode from Addresses   except select addresses.zip_postcode from Properties join Addresses on Properties.property_address_id = Addresses.address_id  group by addresses.zip_postcode having  count(*) <= 2
select users.user_category_code , user_searches.user_id from User_Searches join Users on User_Searches.user_id = Users.user_id  group by users.user_category_code having  count(*) = 1
select user_searches.user_id , users.user_category_code from User_Searches join Users on User_Searches.user_id = Users.user_id  group by user_searches.user_id having  count(*) = 1
select users.age_category_code from User_Searches join Users on User_Searches.user_id = Users.user_id   order by user_searches.search_datetime asc limit 1
select ref_age_categories.age_category_description from ref_age_categories join user_searches   order by user_searches.search_datetime asc limit 1
select users.login_name from Users where  users.user_category_code = "Senior Citizen"   order by users.first_name asc
select users.login_name from Users where  users.user_category_code = "Senior Citizen"   order by users.first_name asc
select count(*) from User_Searches join Users on User_Searches.user_id = Users.user_id where  users.is_buyer = "Y"
select count(*) from User_Searches join Users on User_Searches.user_id = Users.user_id where  users.is_buyer = "1"
select users.date_registered from Users where  users.login_name = "ratione"
select users.date_registered from Users where  users.login_name = "ratione"
select users.first_name , users.middle_name , users.last_name , users.login_name from Users where  users.is_seller = 1
select users.first_name , users.middle_name , users.last_name , users.login_name from Users where  users.is_seller = "Y"
select addresses.line_1_number_building , addresses.line_2_number_street , addresses.town_city from Properties join Addresses on Properties.property_address_id = Addresses.address_id join Users on Properties.owner_user_id = Users.user_id where  users.user_category_code = "Senior Citizen"
select addresses.line_1_number_building , addresses.line_2_number_street , addresses.town_city from Properties join Addresses on Properties.property_address_id = Addresses.address_id join Users on Properties.owner_user_id = Users.user_id where  users.user_category_code = "Senior Citizen"
select count(*) from Property_Features  group by Property_Features.property_id having  count(*) >= 2
select count(*) from Property_Features  group by Property_Features.property_id having  count(*) >= 2
select count(*) , property_photos.property_id from Property_Photos  group by property_photos.property_id
select count(*) , property_photos.property_id from Property_Photos  group by property_photos.property_id
select properties.owner_user_id , count(*) from Property_Photos join Properties on Property_Photos.property_id = Properties.property_id  group by properties.owner_user_id
select properties.owner_user_id , count(*) from Property_Photos join Properties on Property_Photos.property_id = Properties.property_id  group by properties.owner_user_id
select sum(properties.price_max) from Properties join Users on Properties.owner_user_id = Users.user_id where  users.user_category_code = "Single Mother" or users.user_category_code = "Student"
select sum(properties.price_max) from Ref_User_Categories join Properties on Ref_User_Categories.user_category_code = Properties.property_id where  ref_user_categories.user_category_code = "Single Mother" or ref_user_categories.user_category_code = "Student"
select user_property_history.datestamp , properties.property_name from User_Property_History join Properties on User_Property_History.property_id = Properties.property_id   order by user_property_history.datestamp asc
select user_property_history.datestamp , properties.property_name from User_Property_History join Properties on User_Property_History.property_id = Properties.property_id   order by user_property_history.datestamp asc
select ref_property_types.property_type_description , properties.property_type_code from Properties join Ref_Property_Types on Properties.property_type_code = Ref_Property_Types.property_type_code  group by properties.property_type_code  order by count(*) desc limit 1
select ref_property_types.property_type_code , ref_property_types.property_type_description from Properties join Ref_Property_Types on Properties.property_type_code = Ref_Property_Types.property_type_code  group by properties.property_type_code  order by count(*) desc limit 1
select ref_age_categories.age_category_description from Ref_Age_Categories where  ref_age_categories.age_category_code = "Over 60"
select ref_age_categories.age_category_description from Ref_Age_Categories where  ref_age_categories.age_category_code = "Over 60"
select rooms.room_size , count(*) from Rooms  group by rooms.room_size
select rooms.room_size , count(*) from Rooms  group by rooms.room_size
select addresses.country from Properties join Addresses on Properties.property_address_id = Addresses.address_id join Users on Properties.owner_user_id = Users.user_id where  users.first_name = "Robbie"
select addresses.country from Properties join Addresses on Properties.property_address_id = Addresses.address_id join Users on Properties.owner_user_id = Users.user_id where  users.first_name = "Robbie"
select users.first_name , users.middle_name , users.last_name from Properties join Users on Properties.owner_user_id = Users.user_id
select users.first_name , users.last_name from Properties join Users on Properties.owner_user_id = Users.user_id
select user_searches.search_string from Properties join Users on Properties.owner_user_id = Users.user_id join User_Searches on Users.user_id = User_Searches.user_id where  properties.property_id not in (select Properties.property_id from Properties  )
select user_searches.search_string from Properties join Users on Properties.owner_user_id = Users.user_id join User_Searches on Users.user_id = User_Searches.user_id where  properties.property_id not in (select Properties.property_id from Properties  )
select users.last_name , users.user_id from Properties join Users on Properties.owner_user_id = Users.user_id  group by properties.owner_user_id having  count(*) >= 2  intersect select users.last_name , users.user_id from User_Searches join Users on User_Searches.user_id = Users.user_id  group by users.last_name  having  count(*) <= 2
select users.last_name , users.user_id from User_Searches join Users on User_Searches.user_id = Users.user_id  group by user_searches.user_id having  count(*) <= 2  intersect select users.last_name , users.user_id from Properties join Users on Properties.owner_user_id = Users.user_id  group by users.last_name  having  count(*) >= 2
select count(*) from bike where  bike.weight > 780
select bike.product_name , bike.weight from bike   order by bike.price asc
select cyclist.heat , cyclist.name , cyclist.nation from cyclist
select max(bike.weight) , min(bike.weight) from bike
select avg(bike.price) from bike where  bike.material = "Carbon CC"
select cyclist.name , cyclist.result from cyclist where  cyclist.nation != "Russia"
select distinct bike.id , bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id where  cyclists_own_bikes.purchase_year > 2015
select bike.id , bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id  group by cyclists_own_bikes.bike_id having  count(*) >= 4
select cyclist.id , cyclist.name from cyclists_own_bikes join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id  group by cyclists_own_bikes.cyclist_id  order by count(*) desc limit 1
select distinct bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where  cyclist.nation = "Russia" or cyclist.nation = "Great Britain"
select count( distinct cyclist.heat) from cyclist
select count(*) from cyclists_own_bikes where  cyclists_own_bikes.cyclist_id not in (select cyclists_own_bikes.cyclist_id from cyclists_own_bikes where  cyclists_own_bikes.purchase_year > 2015  )
select distinct bike.product_name from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where  cyclist.result > "4:21.558"
select bike.product_name , bike.price from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where  cyclist.name = "Bradley Wiggins"   intersect select bike.product_name , bike.price from cyclists_own_bikes join bike on cyclists_own_bikes.bike_id = bike.id join cyclist on cyclists_own_bikes.cyclist_id = cyclist.id where  cyclist.name = "Antonio Tauler"
select cyclist.name , cyclist.nation , cyclist.result from cyclist where  cyclist.id not in (select cyclists_own_bikes.cyclist_id from cyclists_own_bikes  )
select bike.product_name from bike where  bike.material like "%fiber%"
select cyclists_own_bikes.cyclist_id , count(*) from cyclists_own_bikes  group by cyclists_own_bikes.cyclist_id  order by cyclists_own_bikes.cyclist_id asc
select goods.price , goods.flavor from goods   order by goods.price desc limit 1
select goods.id , goods.flavor from goods   order by goods.price desc limit 1
select goods.food , goods.flavor from goods   order by goods.price asc limit 1
select goods.id , goods.flavor from goods   order by goods.price asc limit 1
select goods.id from goods where  goods.flavor = "Apple"
select goods.id from goods where  goods.flavor = "Apple"
select goods.id from goods where  goods.price < 3
select goods.id from goods where  goods.price < 3
select distinct customers.id from customers join goods on customers.Id = goods.Id where  goods.flavor = "Lemon" and goods.food = "Cake"
select distinct customers.id from customers join goods on customers.Id = goods.Id where  goods.flavor = "Lemon" and goods.food = "Cake"
select count(*) , goods.food from goods join receipts on goods.Id = receipts.ReceiptNumber  group by goods.food
select goods.food , count(*) from goods join receipts on goods.Id = receipts.ReceiptNumber  group by goods.food
select receipts.customerid from receipts  group by receipts.customerid having  count(*) >= 15
select receipts.customerid from receipts  group by receipts.customerid having  count(*) >= 15
select customers.lastname from receipts join customers on receipts.CustomerId = customers.Id  group by receipts.customerid having  count(*) > 10
select customers.lastname from receipts join customers on receipts.CustomerId = customers.Id  group by receipts.customerid having  count(*) > 10
select count( distinct goods.food) from goods where  goods.food = "Cake"
select count( distinct goods.food) from goods
select distinct goods.flavor from goods where  goods.food = "Croissant"
select distinct goods.flavor from goods where  goods.food = "Crisp"
select distinct items.item from items join customers on items.Item = customers.Id where  customers.id = 15
select distinct items.item from items join customers on items.Item = customers.Id where  customers.id = 15
select goods.food , avg(goods.price) , max(goods.price) , min(goods.price) from goods  group by goods.food
select avg(goods.price) , min(goods.price) , max(goods.price) , goods.food from goods  group by goods.food
select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.food = "Cake"   intersect select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.food = "Cookie"
select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.food = "Cake"   intersect select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.food = "Cookie"
select receipts.receiptnumber from customers join goods join receipts where  customers.lastname = "LOGAN" and goods.food = "Croissant"
select receipts.receiptnumber from customers join goods join receipts where  customers.lastname = "Logan" and goods.food = "Croissant"
select receipts.receiptnumber , receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber   order by goods.price desc limit 1
select receipts.receiptnumber , receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber   order by goods.price desc limit 1
select items.item from items  group by items.item  order by count(*) asc limit 1
select items.item from items  group by items.item  order by count(*) asc limit 1
select goods.food , count(*) from goods  group by goods.food
select goods.food , count(*) from goods  group by goods.food
select goods.food , avg(goods.price) from goods  group by goods.food
select goods.food , avg(goods.price) from goods  group by goods.food
select goods.id from goods where  goods.flavor = "Apricot" and goods.price < 5
select goods.id from goods where  goods.flavor = "Apricot" and goods.price < 5
select goods.flavor from goods where  goods.price > 10
select goods.flavor from goods where  goods.price > 10
select distinct goods.id , goods.price from goods where  goods.price < (select avg(goods.price) from goods  )
select distinct goods.id , goods.price from goods where  goods.price < (select avg(goods.price) from goods  )
select distinct goods.id from goods where  goods.price < (select max(goods.price) from goods where  goods.food = "Tart"  )
select distinct goods.id from goods where  goods.price < (select max(goods.price) from goods where  goods.food = "Tart"  )
select distinct receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.price > 13
select distinct receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.price > 13
select receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.price > 15
select receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.price > 15
select goods.id from goods where  goods.id like "%APP%"
select goods.id from goods where  goods.id like "%APP%"
select goods.id , goods.price from goods where  goods.id like "%70%"
select goods.id , goods.price from goods where  goods.id like "%70%"
select customers.lastname from customers   order by customers.lastname asc
select customers.lastname from customers   order by customers.lastname asc
select goods.id , goods.food , goods.flavor from goods   order by goods.id asc
select distinct goods.id from goods   order by goods.id asc
select items.receipt from goods join receipts join items where  goods.flavor = "Apple" or receipts.customerid = 12
select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.flavor = "Apple" or receipts.customerid = 12
select receipts.date from receipts   order by receipts.date desc limit 1
select receipts.receiptnumber , receipts.date from receipts   order by receipts.date desc limit 1
select items.receipt from items join receipts on items.Item = receipts.CustomerId where  receipts.date = (select min(receipts.Date) from receipts  )   union select items.receipt from items join goods on items.Item = goods.Id where  goods.price > 10
select receipts.receiptnumber from goods join receipts on goods.Id = receipts.ReceiptNumber where  goods.price > 10 or receipts.date = (select min(receipts.date) from receipts  )
select goods.id from goods where  goods.food = "Cookie"   intersect select goods.id from goods where  goods.food = "Cake" and goods.price between 3 and 7
select goods.id from goods where  goods.food = "Cookie"   union select goods.id from goods where  goods.food = "Cake" and goods.price between 3 and 7
select customers.firstname , customers.lastname from receipts join customers on receipts.CustomerId = customers.Id   order by receipts.date asc limit 1
select customers.firstname , customers.lastname from receipts join customers on receipts.CustomerId = customers.Id   order by receipts.date asc limit 1
select avg(goods.price) from goods where  goods.flavor = "Blackberry" or goods.flavor = "Blueberry"
select avg(goods.price) from goods where  goods.flavor = "Blackberry" or goods.flavor = "Blueberry"
select goods.price from goods where  goods.flavor = "Cheese"   order by goods.price asc limit 1
select goods.price from goods where  goods.flavor = "Cheese"   order by goods.price asc limit 1
select max(goods.price) , avg(goods.price) , min(goods.price) , goods.flavor from goods  group by goods.flavor  order by goods.flavor asc
select max(goods.price) , min(goods.price) , avg(goods.price) , goods.flavor from goods  group by goods.flavor  order by goods.flavor asc
select min(goods.price) , max(goods.price) , goods.food from goods  group by goods.food  order by goods.food asc
select min(goods.price) , max(goods.price) from goods   order by goods.food asc
select receipts.date from receipts  group by receipts.date  order by count(*) desc limit 3
select receipts.date from receipts  group by receipts.date  order by count(*) desc limit 3
select count(*) , customers.firstname , customers.lastname from receipts join customers on receipts.CustomerId = customers.Id  group by customers.id  order by count(*) desc limit 1
select receipts.customerid , count(*) from receipts  group by receipts.customerid  order by count(*) desc limit 1
select count( distinct customers.id) , receipts.date from receipts join customers on receipts.CustomerId = customers.Id  group by receipts.date
select receipts.date , count(*) from receipts join customers on receipts.CustomerId = customers.Id  group by receipts.date
select customers.firstname , customers.lastname from customers join goods on customers.Id = goods.Id where  goods.flavor = "Apple" and goods.food = "Tart"
select customers.firstname , customers.lastname from customers join goods on customers.Id = goods.Id where  goods.flavor = "Apple" and goods.food = "Tart"
select goods.id from goods where  goods.price < (select max(goods.price) from goods where  goods.food = "Cookie"  )
select goods.id from goods where  goods.price < (select max(goods.price) from goods where  goods.food = "Croissant"  )
select goods.id from goods where  goods.price >= (select avg(goods.price) from goods where  goods.food = "Cake"  )
select goods.id from goods where  goods.price >= (select avg(goods.price) from goods where  goods.food = "Cake"  )
select goods.id from goods where  goods.price > (select avg(goods.price) from goods  )
select goods.id from goods where  goods.price > (select avg(goods.price) from goods  )
select goods.id , goods.flavor , goods.food from goods   order by goods.price asc
select goods.id , goods.flavor , goods.food from goods   order by goods.price asc
select goods.id , goods.flavor from goods where  goods.food = "Cake"   order by goods.flavor asc
select goods.id , goods.flavor from goods where  goods.food = "Cake"   order by goods.flavor asc
select items.item from items join goods on items.Item = goods.Id where  goods.flavor = "Chocolate"  group by items.item having  count(*) > 10
select items.item from items join goods on items.Item = goods.Id where  goods.flavor = "Chocolate"  group by items.item having  count(*) <= 10
select goods.flavor from goods where  goods.food = "Cake"   except select goods.flavor from goods where  goods.food = "Tart"
select goods.flavor from goods where  goods.food = "Cake"   except select goods.flavor from goods where  goods.food = "Tart"
select goods.food from goods  group by goods.food  order by count(*) desc limit 3
select items.item from items  group by items.item  order by count(*) desc limit 3
select receipts.customerid from receipts  group by receipts.customerid having  sum(receipts.receiptnumber) > 150
select receipts.customerid from receipts  group by receipts.customerid having  sum(receipts.receiptnumber) > 150
select receipts.customerid , avg(goods.price) from goods join receipts on goods.Id = receipts.ReceiptNumber  group by receipts.customerid having  avg(goods.price) > 5
select receipts.customerid from goods join receipts on goods.Id = receipts.ReceiptNumber  group by receipts.customerid having  avg(goods.price) > 5
select receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber  group by receipts.date having  sum(goods.price) > 100
select receipts.date from goods join receipts on goods.Id = receipts.ReceiptNumber  group by receipts.date having  sum(goods.price) > 100
select count(*) from driver
select count(*) from driver
select count(*) , driver.make from driver where  driver.points > 150  group by driver.make
select driver.make , count(*) from driver where  driver.points > 150  group by driver.make
select avg(driver.age) , driver.make from driver  group by driver.make
select avg(driver.age) , driver.make from driver  group by driver.make
select avg(driver.laps) from driver where  driver.age < 20
select avg(driver.laps) from driver where  driver.age < 20
select team.manager , team.sponsor from team   order by team.car_owner asc
select team.manager , team.sponsor from team   order by team.car_owner asc
select team.make from team  group by team.make having  count(*) > 1
select team.make from team  group by team.make having  count(*) > 1
select team.make from team where  team.car_owner = "Buddy Arrington"
select team.make from team where  team.car_owner = "Buddy Arrington"
select max(driver.points) , min(driver.points) from driver
select max(driver.points) , min(driver.points) from driver
select count(*) from driver where  driver.points < 150
select count(*) from driver where  driver.points < 150
select driver.driver from driver   order by driver.age asc
select driver.driver from driver   order by driver.age asc
select driver.driver from driver   order by driver.points desc
select driver.driver from driver   order by driver.points desc
select driver.driver , country.country from country join driver on country.Country_Id = driver.Driver_ID
select driver.driver , driver.country from driver
select max(driver.points) from country join driver on country.Country_Id = driver.Driver_ID where  country.capital = "Dublin"
select max(driver.points) from country join driver on country.Country_Id = driver.Driver_ID where  country.capital = "Dublin"
select avg(driver.age) from country join driver on country.Country_Id = driver.Driver_ID where  country.official_native_language = "English"
select avg(driver.age) from country join driver on country.Country_Id = driver.Driver_ID where  country.official_native_language = "English"
select country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.points > 150
select distinct country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.points > 150
select country.capital from country join driver on country.Country_Id = driver.Driver_ID   order by driver.points desc limit 1
select country.capital from country join driver on country.Country_Id = driver.Driver_ID   order by driver.points desc limit 1
select driver.make , count(*) from driver  group by driver.make
select driver.make , count(*) from driver  group by driver.make
select driver.make from driver  group by driver.make  order by count(*) desc limit 1
select driver.make from driver  group by driver.make  order by count(*) desc limit 1
select driver.make from driver  group by driver.make having  count(*) >= 3
select driver.make from driver  group by driver.make having  count(*) >= 3
select team.team from team where  team.team_id not in (select team_driver.Team_ID from team_driver  )
select team.team from team where  team.team_id not in (select team_driver.Team_ID from team_driver  )
select country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.make = "Dodge"   intersect select country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.make = "Chevrolet"
select country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.make = "Dodge"   intersect select country.country from country join driver on country.Country_Id = driver.Driver_ID where  driver.make = "Chevrolet"
select sum(driver.points) , avg(driver.points) from driver
select sum(driver.points) , avg(driver.points) from driver
select country.country from country   except select driver.country from driver
select country.country from country where  country.country not in (select driver.Country from driver  )
select team.manager , team.sponsor from team_driver join team on team_driver.Team_ID = team.Team_ID  group by team.team_id  order by count(*) desc limit 1
select team.manager , team.sponsor from team_driver join team on team_driver.Team_ID = team.Team_ID  group by team.team_id  order by count(*) desc limit 1
select team.manager , team.car_owner from team_driver join team on team_driver.Team_ID = team.Team_ID  group by team_driver.team_id having  count(*) >= 2
select team.manager , team.car_owner from team_driver join team on team_driver.Team_ID = team.Team_ID  group by team_driver.team_id having  count(*) >= 2
select count(*) from institution
select count(*) from institution
select institution.name from institution   order by institution.name asc
select institution.name from institution   order by institution.name asc
select institution.name from institution   order by institution.founded asc
select institution.name from institution   order by institution.founded asc
select institution.city , institution.province from institution
select institution.city , institution.province from institution
select max(institution.enrollment) , min(institution.enrollment) from institution
select max(institution.enrollment) , min(institution.enrollment) from institution
select institution.affiliation from institution where  institution.city != "Vancouver"
select institution.affiliation from institution where  institution.city != "Vancouver"
select institution.stadium from institution   order by institution.capacity desc
select institution.stadium from institution   order by institution.capacity desc
select institution.stadium from institution   order by institution.enrollment desc limit 1
select institution.stadium from institution   order by institution.enrollment desc limit 1
select institution.name , championship.nickname from Championship join institution on Championship.Institution_ID = institution.Institution_ID
select institution.name , championship.nickname from Championship join institution on Championship.Institution_ID = institution.Institution_ID
select institution.name from institution   order by institution.enrollment asc limit 1
select institution.name from institution   order by institution.enrollment asc limit 1
select institution.name from Championship join institution on Championship.Institution_ID = institution.Institution_ID   order by championship.number_of_championships desc
select institution.name from Championship join institution on Championship.Institution_ID = institution.Institution_ID   order by championship.number_of_championships desc
select distinct institution.name from Championship join institution on Championship.Institution_ID = institution.Institution_ID
select institution.name from Championship join institution on Championship.Institution_ID = institution.Institution_ID  group by championship.institution_id having  count(*) >= 1
select sum(championship.number_of_championships) from Championship join institution on Championship.Institution_ID = institution.Institution_ID where  institution.affiliation = "Public"
select sum(championship.number_of_championships) from Championship join institution on Championship.Institution_ID = institution.Institution_ID where  institution.affiliation = "Public"
select institution.affiliation , count(*) from institution  group by institution.affiliation
select institution.affiliation , count(*) from institution  group by institution.affiliation
select institution.affiliation from institution  group by institution.affiliation  order by count(*) desc limit 1
select institution.affiliation from institution  group by institution.affiliation  order by count(*) desc limit 1
select institution.founded from institution  group by institution.founded having  count(*) > 1
select institution.founded , count(*) from institution  group by institution.founded having  count(*) > 1
select institution.name from institution   order by institution.capacity desc
select institution.name from institution   order by institution.capacity desc
select sum(institution.enrollment) from institution where  institution.city = "Vancouver" or institution.city = "Calgary"
select institution.enrollment from institution where  institution.city = "Vancouver" or institution.city = "Calgary"
select institution.province from institution where  institution.founded < 1920   intersect select institution.province from institution where  institution.founded > 1950
select institution.province from institution where  institution.founded < 1920   intersect select institution.province from institution where  institution.founded > 1950
select count( distinct institution.province) from institution
select count( distinct institution.province) from institution
select * from Warehouses
select * from Warehouses
select distinct boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select distinct boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select boxes.contents from Boxes where  boxes.value > 150
select boxes.contents from Boxes where  boxes.value > 150
select boxes.warehouse , avg(boxes.value) from Boxes  group by boxes.warehouse
select avg(boxes.value) , boxes.warehouse from Boxes  group by boxes.warehouse
select avg(boxes.value) , sum(boxes.value) from Boxes
select avg(boxes.value) , sum(boxes.value) from Boxes
select avg(warehouses.capacity) , sum(warehouses.capacity) from Warehouses
select avg(warehouses.capacity) , sum(warehouses.capacity) from Warehouses
select boxes.contents , avg(boxes.value) , max(boxes.value) from Boxes  group by boxes.contents
select boxes.contents , avg(boxes.value) , max(boxes.value) from Boxes  group by boxes.contents
select boxes.contents from Boxes  group by boxes.contents  order by sum(boxes.value) desc limit 1
select boxes.contents from Boxes  group by boxes.contents  order by sum(boxes.value) desc limit 1
select avg(boxes.value) from Boxes
select avg(boxes.value) from Boxes
select distinct boxes.contents from Boxes
select distinct boxes.contents from Boxes
select count( distinct boxes.contents) from Boxes
select count( distinct boxes.contents) from Boxes
select distinct warehouses.location from Warehouses
select distinct warehouses.location from Warehouses
select boxes.code from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago" or warehouses.location = "New York"
select boxes.code from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago" or warehouses.location = "New York"
select sum(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago" or warehouses.location = "New York"
select sum(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago" or warehouses.location = "New York"
select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago"   intersect select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago"   intersect select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select boxes.contents from Boxes   except select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select boxes.contents from Boxes   except select boxes.contents from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "New York"
select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Rocks"   except select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Scissors"
select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Rocks"   except select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Scissors"
select boxes.warehouse from Boxes where  boxes.contents = "Rocks" or boxes.contents = "Scissors"
select distinct boxes.warehouse from Boxes where  boxes.contents = "Rocks" or boxes.contents = "Scissors"
select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Rocks"   intersect select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Scissors"
select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Rocks"   intersect select warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Scissors"
select boxes.code , boxes.contents from Boxes   order by boxes.value asc
select boxes.code , boxes.contents from Boxes   order by boxes.value asc
select boxes.code , boxes.contents from Boxes   order by boxes.value asc limit 1
select boxes.code , boxes.contents from Boxes   order by boxes.value asc limit 1
select distinct boxes.contents from Boxes where  boxes.value > (select avg(boxes.value) from Boxes  )
select distinct boxes.contents from Boxes where  boxes.value > (select avg(boxes.value) from Boxes  )
select distinct boxes.contents from Boxes   order by boxes.contents asc
select distinct boxes.contents from Boxes   order by boxes.contents asc
select boxes.code from Boxes where  boxes.value > (select max(boxes.value) from Boxes where  boxes.contents = "Rocks"  )
select boxes.code from Boxes where  boxes.value > (select max(boxes.value) from Boxes where  boxes.contents = "Rocks"  )
select boxes.code , boxes.contents from Boxes where  boxes.value > (select max(boxes.value) from Boxes where  boxes.contents = "Scissors"  )
select boxes.code , boxes.contents from Boxes where  boxes.value > (select max(boxes.value) from Boxes where  boxes.contents = "Scissors"  )
select sum(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.capacity = (select max(Warehouses.Capacity) from Warehouses  )
select sum(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.capacity = (select max(Warehouses.Capacity) from Warehouses  )
select avg(boxes.value) , boxes.warehouse from Boxes  group by boxes.warehouse having  avg(boxes.value) > 150
select avg(boxes.value) , boxes.warehouse from Boxes  group by boxes.warehouse having  avg(boxes.value) >= 150
select boxes.contents , count(*) from Boxes  group by boxes.contents
select boxes.contents , count(*) from Boxes  group by boxes.contents
select sum(warehouses.capacity) , avg(warehouses.capacity) , max(warehouses.capacity) , warehouses.location from Warehouses  group by warehouses.location
select sum(warehouses.capacity) , avg(warehouses.capacity) , max(warehouses.capacity) , warehouses.location from Warehouses  group by warehouses.location
select sum(warehouses.capacity) from Warehouses
select sum(warehouses.capacity) from Warehouses
select boxes.value , warehouses.location , max(boxes.value) , warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code  group by warehouses.location
select warehouses.location , max(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code  group by warehouses.location
select warehouses.code , count(*) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code  group by warehouses.code
select count(*) , warehouses.code from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code  group by warehouses.code
select count( distinct warehouses.location) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  boxes.contents = "Rocks"
select count( distinct boxes.warehouse) from Boxes where  boxes.contents = "Rocks"
select boxes.code , warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code
select boxes.code , warehouses.location from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code
select boxes.code from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago"
select boxes.code from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location = "Chicago"
select count(*) , boxes.warehouse from Boxes  group by boxes.warehouse
select count(*) , warehouses.capacity from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code  group by boxes.warehouse
select count( distinct boxes.contents) , boxes.warehouse from Boxes  group by boxes.warehouse
select count( distinct boxes.contents) , boxes.warehouse from Boxes  group by boxes.warehouse
select warehouses.code from Warehouses where  warehouses.capacity > 0
select warehouses.code from Warehouses where  warehouses.capacity > (select warehouses.capacity from Warehouses  )
select sum(boxes.value) from Boxes where  boxes.warehouse not in (select Warehouses.Code from Warehouses where  warehouses.location = "Chicago"  )
select sum(boxes.value) from Boxes join Warehouses on Boxes.Warehouse = Warehouses.Code where  warehouses.location != "Chicago"
select university.university_name , university.city , university.state from university   order by university.university_name asc
select university.university_name , university.city , university.state from university   order by university.university_name asc
select count(*) from university where  university.state = "Illinois" or university.state = "Ohio"
select count(*) from university where  university.state = "Illinois" or university.state = "Ohio"
select max(university.enrollment) , avg(university.enrollment) , min(university.enrollment) from university
select max(university.enrollment) , avg(university.enrollment) , min(university.enrollment) from university
select university.team_name from university where  university.enrollment > (select avg(university.enrollment) from university  )
select university.team_name from university where  university.enrollment > (select avg(university.enrollment) from university  )
select distinct university.home_conference from university
select distinct university.home_conference from university
select university.home_conference , count(*) from university  group by university.home_conference
select university.home_conference , count(*) from university  group by university.home_conference
select university.state from university  group by university.state  order by count(*) desc limit 1
select university.state from university  group by university.state  order by count(*) desc limit 1
select university.home_conference from university  group by university.home_conference having  avg(university.enrollment) > 2000
select university.home_conference from university  group by university.home_conference having  avg(university.enrollment) > 2000
select university.home_conference from university  group by university.home_conference  order by sum(university.enrollment) asc limit 1
select university.home_conference from university   order by university.enrollment asc limit 1
select major.major_name , major.major_code from major   order by major.major_code asc
select major.major_name , major.major_code from major   order by major.major_code asc
select major.major_name , major_ranking.rank from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  university.university_name = "Augustana College"
select major_ranking.rank , major.major_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  university.university_name = "Augustana College"
select university.university_name , university.city , university.state from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting" and major_ranking.rank = 1
select university.university_name , university.city , university.state from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting"   order by major_ranking.rank desc limit 1
select university.university_name from major_ranking join university on major_ranking.University_ID = university.University_ID where  major_ranking.rank = 1  group by university.university_name  order by count(*) desc limit 1
select university.university_name from major_ranking join university on major_ranking.University_ID = university.University_ID where  major_ranking.rank = 1  group by major_ranking.university_id  order by count(*) desc limit 1
select university.university_name from university   except select university.university_name from major_ranking join university on major_ranking.University_ID = university.University_ID where  major_ranking.rank = 1
select university.university_name from university where  university.university_id not in (select major_ranking.University_ID from major_ranking where  major_ranking.rank = 1  )
select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting"   intersect select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Urban Education"
select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting"   intersect select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Urban Education"
select university.university_name , overall_ranking.rank from overall_ranking join university on overall_ranking.University_ID = university.University_ID where  university.state = "Wisconsin"
select university.university_name , overall_ranking.rank from overall_ranking join university on overall_ranking.University_ID = university.University_ID where  university.state = "Wisconsin"
select university.university_name from overall_ranking join university on overall_ranking.University_ID = university.University_ID   order by overall_ranking.research_point desc limit 1
select university.university_name from overall_ranking join university on overall_ranking.University_ID = university.University_ID  group by university.university_name  order by sum(overall_ranking.research_point) desc limit 1
select university.university_name from overall_ranking join university on overall_ranking.University_ID = university.University_ID   order by overall_ranking.reputation_point asc
select university.university_name from overall_ranking join university on overall_ranking.University_ID = university.University_ID   order by overall_ranking.reputation_point asc
select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting" and major_ranking.rank >= 3
select university.university_name from major_ranking join major on major_ranking.Major_ID = major.Major_ID join university on major_ranking.University_ID = university.University_ID where  major.major_name = "Accounting" and major_ranking.rank >= 3
select sum(university.enrollment) from overall_ranking join university on overall_ranking.University_ID = university.University_ID where  overall_ranking.rank <= 5
select sum(university.enrollment) from overall_ranking join university on overall_ranking.University_ID = university.University_ID where  overall_ranking.rank <= 5
select university.university_name , overall_ranking.citation_point from overall_ranking join university on overall_ranking.University_ID = university.University_ID where  overall_ranking.reputation_point >= 3
select university.university_name , overall_ranking.citation_point from overall_ranking join university on overall_ranking.University_ID = university.University_ID   order by overall_ranking.reputation_point desc limit 3
select university.state from university where  university.enrollment < 3000  group by university.state having  count(*) > 2
select university.state from university where  university.enrollment < 3000  group by university.state having  count(*) > 2
select movies.title from Movies where  movies.rating not in (select movies.rating from Movies  )
select movies.title from Movies where  movies.rating not in (select movies.rating from Movies  )
select movies.title from Movies where  movies.rating = "G"
select movies.title from Movies where  movies.rating = "G"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon"
select movies.title , movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code
select movies.title , movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code
select count(*) from Movies where  movies.rating = "G"
select count(*) from Movies where  movies.rating = "G"
select count(*) from MovieTheaters
select count(*) from MovieTheaters
select count( distinct movietheaters.movie) from MovieTheaters
select count( distinct movies.title) from Movies
select count( distinct movietheaters.name) from MovieTheaters
select count( distinct movietheaters.name) from MovieTheaters
select movies.rating from Movies where  movies.title like "%Citizen%"
select movies.rating from Movies where  movies.title like "%Citizen%"
select movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movies.rating = "G" or movies.rating = "PG"
select movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movies.rating = "G" or movies.rating = "PG"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon" or movietheaters.name = "Imperial"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon" or movietheaters.name = "Imperial"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon"   intersect select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Imperial"
select movietheaters.movie from MovieTheaters where  movietheaters.name = "Odeon"   intersect select movietheaters.movie from MovieTheaters where  movietheaters.name = "Imperial"
select distinct movies.title from Movies   except select distinct movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name = "Odeon"
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movietheaters.name != "Odeon"
select movies.title from Movies   order by movies.title asc
select movies.title from Movies   order by movies.title asc
select movies.title from Movies   order by movies.rating asc
select movies.title from Movies   order by movies.rating asc
select movietheaters.name from MovieTheaters  group by movietheaters.name  order by count(*) desc limit 1
select movietheaters.name from MovieTheaters  group by movietheaters.name  order by count(*) desc limit 1
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code  group by movies.title  order by count(*) desc limit 1
select movies.title from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code  group by movies.title  order by count(*) desc limit 1
select count(*) , movies.rating from Movies  group by movies.rating
select movies.rating , count(*) from Movies  group by movies.rating
select count(*) from Movies where  movies.rating != "null"
select count(*) from Movies where  movies.rating != "null"
select distinct movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code
select movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code
select movietheaters.name from MovieTheaters where  movietheaters.code not in (select MovieTheaters.Code from MovieTheaters  )
select movietheaters.name from MovieTheaters where  movietheaters.movie not in (select Movies.Code from Movies  )
select movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movies.rating = "G"
select movietheaters.name from MovieTheaters join Movies on MovieTheaters.Movie = Movies.Code where  movies.rating = "G"
select movies.title from Movies
select movies.title from Movies
select distinct movies.rating from Movies
select distinct movies.rating from Movies
select * from Movies where  movies.rating = "null"
select * from Movies where  movies.rating = "null"
select movies.title from Movies where  movies.code not in (select MovieTheaters.Movie from MovieTheaters  )
select movies.title from Movies where  movies.code not in (select MovieTheaters.Movie from MovieTheaters  )
select package.recipient from Package   order by package.weight desc limit 1
select client.name from Package join Client on Package.Recipient = Client.AccountNumber   order by package.weight desc limit 1
select sum(package.weight) from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select sum(package.weight) from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select employee.position from Employee where  employee.name = "Amy Wong"
select employee.position from Employee where  employee.name = "Amy Wong"
select employee.salary , employee.position from Employee where  employee.name = "Turanga Leela"
select employee.salary , employee.position from Employee where  employee.name = "Turanga Leela"
select avg(employee.salary) from Employee where  employee.position = "Intern"
select avg(employee.salary) from Employee where  employee.position = "Intern"
select has_clearance.level from Has_Clearance join Employee on Has_Clearance.Employee = Employee.EmployeeID where  employee.position = "Physician"
select has_clearance.level from Has_Clearance join Employee on Has_Clearance.Employee = Employee.EmployeeID where  employee.position = "Physician"
select package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select count(*) from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong"
select package.contents from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong" or package.recipient = "Leo Wong"
select distinct package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "Leo Wong" or package.recipient = "Leo Wong"
select count(*) from Package where  package.sender = "Ogden Wernstrom" and package.recipient = "Leo Wong"
select count(*) from Package where  package.recipient in (select Client.AccountNumber from Client where  client.name = "Ogden Wernstrom"   intersect select Client.AccountNumber from Client where  client.name = "Leo Wong"   )
select package.contents from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "John Zoidfarb"
select package.contents from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "John Zoidfarb"
select package.packagenumber , package.weight from Package join Client on Package.Recipient = Client.AccountNumber where  client.name like "%John%"   order by package.weight desc limit 1
select package.packagenumber , package.weight from Package join Client on Package.Recipient = Client.AccountNumber where  client.name = "John"   order by package.weight desc limit 1
select package.packagenumber , package.weight from Package   order by package.weight asc limit 3
select package.packagenumber , package.weight from Package   order by package.weight asc limit 3
select client.name , count(*) from Package join Client on Package.Recipient = Client.AccountNumber  group by client.name  order by count(*) desc limit 1
select client.name , count(*) from Package join Client on Package.Recipient = Client.AccountNumber  group by client.name  order by count(*) desc limit 1
select client.name , count(*) from Package join Client on Package.Recipient = Client.AccountNumber  group by client.name  order by count(*) asc limit 1
select package.recipient , count(*) from Package  group by package.recipient  order by count(*) asc limit 1
select client.name from Package join Client on Package.Recipient = Client.AccountNumber  group by client.name having  count(*) > 1
select client.name from Package join Client on Package.Recipient = Client.AccountNumber  group by package.sender having  count(*) > 1
select planet.coordinates from Planet where  planet.name = "Mars"
select planet.coordinates from Planet where  planet.name = "Mars"
select planet.name , planet.coordinates from Planet   order by planet.name asc
select planet.name , planet.coordinates from Planet   order by planet.name asc
select shipment.shipmentid from Shipment join Employee on Shipment.Manager = Employee.EmployeeID where  employee.name = "Phillip J. Fry"
select shipment.shipmentid from Shipment where  shipment.manager = "Phillip J Fry"
select shipment.date from Shipment
select shipment.date from Shipment
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Mars"
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Mars"
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  planet.name = "Mars" and employee.name = "Turanga Leela"
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  employee.name = "Turanga Leela" and planet.name = "Mars"
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  planet.name = "Mars" or employee.name = "Turanga Leela"
select shipment.shipmentid from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  employee.name = "Turanga Leela" and planet.name = "Mars"
select planet.name , count(*) from Shipment join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet
select planet.name , count(*) from Shipment join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet
select planet.name from Shipment join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet  order by count(*) desc limit 1
select planet.name from Shipment join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet  order by count(*) desc limit 1
select employee.name , count(*) from Shipment join Employee on Shipment.Manager = Employee.EmployeeID  group by shipment.manager
select employee.name , count(*) from Shipment join Employee on Shipment.Manager = Employee.EmployeeID  group by shipment.manager
select sum(package.weight) from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Mars"
select sum(package.weight) from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Mars"
select planet.name , sum(package.weight) from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet
select sum(package.weight) , planet.name from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID  group by planet.name
select planet.name from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet having  sum(package.weight) > 30
select planet.name from Package join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID  group by shipment.planet having  sum(package.weight) > 30
select package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Omicron Persei 8" and client.name = "Zapp Brannigan"
select count(*) from Package join Client on Package.Recipient = Client.AccountNumber join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  client.name = "Zapp Brannigan" and planet.name = "Omicron Persei 8"
select package.packagenumber from Package join Client on Package.Recipient = Client.AccountNumber join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Omicron Persei 8" or client.name = "Zapp Brannigan"
select count(*) from Package join Client on Package.Recipient = Client.AccountNumber join Shipment on Package.Shipment = Shipment.ShipmentID join Planet on Shipment.Planet = Planet.PlanetID where  planet.name = "Omicron Persei 8" or client.name = "Zapp Brannigan"
select package.packagenumber , package.weight from Package where  package.weight between 10 and 30
select package.packagenumber , package.weight from Package where  package.weight between 10 and 30
select employee.name from Employee where  employee.employeeid not in (select Has_Clearance.Employee from Has_Clearance join Planet on Has_Clearance.Planet = Planet.PlanetID where  planet.name = "Mars"  )
select employee.name from Employee   except select employee.name from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  planet.name = "Mars"
select employee.name from Shipment join Planet on Shipment.Planet = Planet.PlanetID join Employee on Shipment.Manager = Employee.EmployeeID where  planet.name = "Omega III"
select employee.name from Has_Clearance join Employee on Has_Clearance.Employee = Employee.EmployeeID where  has_clearance.planet = "Omega III"
select planet.name from Has_Clearance join Planet on Has_Clearance.Planet = Planet.PlanetID  group by has_clearance.planet having  count(*) = 1
select planet.name from Has_Clearance join Planet on Has_Clearance.Planet = Planet.PlanetID  group by has_clearance.planet having  count(*) = 1
select employee.name from Employee where  employee.salary between 5000 and 10000
select employee.name from Employee where  employee.salary between 5000 and 10000
select employee.name from Employee where  employee.salary > (select avg(employee.salary) from Employee  )   union select employee.name from Employee where  employee.salary > 5000
select employee.name from Employee where  employee.salary > (select avg(employee.salary) from Employee  )   union select employee.name from Employee where  employee.salary > 5000
select count(*) from Employee where  employee.employeeid not in (select Has_Clearance.Employee from Has_Clearance join Planet on Has_Clearance.Planet = Planet.PlanetID where  planet.name = "Mars"  )
select count(*) from Has_Clearance where  has_clearance.employee not in (select Has_Clearance.Employee from Has_Clearance join Planet on Has_Clearance.Planet = Planet.PlanetID where  planet.name = "Mars"  )
select count(*) from game
select count(*) from game
select game.title , game.developers from game   order by game.units_sold_millions desc
select game.title , game.developers from game   order by game.units_sold_millions desc
select avg(game.units_sold_millions) from game where  game.developers != "Nintendo"
select avg(game.units_sold_millions) from game where  game.developers != "Nintendo"
select platform.platform_name , platform.market_district from platform
select platform.platform_name , platform.market_district from platform
select platform.platform_name , platform.platform_id from platform where  platform.download_rank = 1
select platform.platform_name , platform.platform_id from platform where  platform.download_rank = 1
select max(player.rank_of_the_year) , min(player.rank_of_the_year) from player
select max(player.rank_of_the_year) , min(player.rank_of_the_year) from player
select count(*) from player where  player.rank_of_the_year < 3
select count(*) from player where  player.rank_of_the_year <= 3
select player.player_name from player   order by player.player_name asc
select player.player_name from player   order by player.player_name asc
select player.player_name , player.college from player   order by player.rank_of_the_year desc
select player.player_name , player.college from player   order by player.rank_of_the_year desc
select player.player_name , player.rank_of_the_year from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  game.title = "Super Mario World"
select player.player_name , player.rank_of_the_year from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  game.title = "Super Mario World"
select distinct game.developers from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.college = "Auburn"
select distinct game.developers from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.college = "Auburn"
select avg(game.units_sold_millions) from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.position = "Guard"
select avg(game.units_sold_millions) from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.position = "Guard"
select game.title , platform.platform_name from game join platform on game.Platform_ID = platform.Platform_ID
select game.title , platform.platform_name from game join platform on game.Platform_ID = platform.Platform_ID
select game.title from game join platform on game.Platform_ID = platform.Platform_ID where  platform.market_district = "Asia" or platform.market_district = "USA"
select game.title from game join platform on game.Platform_ID = platform.Platform_ID where  platform.market_district = "Asia" or platform.market_district = "USA"
select game.franchise , count(*) from game  group by game.franchise
select game.franchise , count(*) from game  group by game.franchise
select game.franchise from game  group by game.franchise  order by count(*) desc limit 1
select game.franchise from game  group by game.franchise  order by count(*) desc limit 1
select game.franchise from game  group by game.franchise having  count(*) >= 2
select game.franchise from game  group by game.franchise having  count(*) >= 2
select player.player_name from player where  player.player_id not in (select game_player.Player_ID from game_player  )
select player.player_name from player where  player.player_id not in (select game_player.Player_ID from game_player  )
select game.title from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.college = "Oklahoma"   intersect select game.title from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.college = "Auburn"
select game.title from game_player join game on game_player.Game_ID = game.Game_ID join player on game_player.Player_ID = player.Player_ID where  player.college = "Oklahoma" or player.college = "Auburn"
select distinct game.franchise from game
select distinct game.franchise from game
select game.title from game where  game.game_id not in (select game_player.Game_ID from game_player join player on game_player.Player_ID = player.Player_ID where  player.position = "Guard"  )
select game.title from game where  game.game_id not in (select game_player.Game_ID from game_player join player on game_player.Player_ID = player.Player_ID where  player.position = "Guard"  )
select press.name from press   order by press.year_profits_billion desc
select press.name from press   order by press.year_profits_billion desc
select press.name from press where  press.year_profits_billion > 15 or press.month_profits_billion > 1
select press.name from press where  press.year_profits_billion > 15 or press.month_profits_billion > 1
select avg(press.year_profits_billion) , max(press.year_profits_billion) from press
select avg(press.year_profits_billion) , max(press.year_profits_billion) from press
select press.name from press   order by press.month_profits_billion desc limit 1
select press.name from press   order by press.month_profits_billion desc limit 1
select press.name from press   order by press.month_profits_billion desc limit 1
select press.name from press   order by press.month_profits_billion desc limit 1
select count(*) from author where  author.age < 30
select count(*) from author where  author.age < 30
select avg(author.age) , author.gender from author  group by author.gender
select author.gender , avg(author.age) from author  group by author.gender
select count(*) , author.gender from author where  author.age > 30  group by author.gender
select count(*) , author.gender from author where  author.age > 30  group by author.gender
select book.title from book   order by book.release_date desc
select book.title from book   order by book.release_date desc
select book.book_series , count(*) from book  group by book.book_series
select count(*) , book.book_series from book  group by book.book_series
select book.title , book.release_date from book   order by book.sale_amount desc limit 5
select book.title , book.release_date from book   order by book.sale_amount desc limit 5
select book.book_series from book where  book.sale_amount > 1000   intersect select book.book_series from book where  book.sale_amount < 500
select book.book_series from book where  book.sale_amount > 1000   intersect select book.book_series from book where  book.sale_amount < 500
select author.name from book join author on book.Author_ID = author.Author_ID where  book.book_series = "MM"   intersect select author.name from book join author on book.Author_ID = author.Author_ID where  book.book_series = "LT"
select author.name from book join author on book.Author_ID = author.Author_ID where  book.book_series = "MM"   intersect select author.name from book join author on book.Author_ID = author.Author_ID where  book.book_series = "LT"
select author.name , author.age from author where  author.author_id not in (select book.Author_ID from book  )
select author.name from author   except select author.name from book join author on book.Author_ID = author.Author_ID
select author.name from book join author on book.Author_ID = author.Author_ID  group by book.author_id having  count(*) > 1
select author.name from book join author on book.Author_ID = author.Author_ID  group by book.author_id having  count(*) > 1
select book.title , author.name , press.name from book join press on book.Press_ID = press.Press_ID join author on book.Author_ID = author.Author_ID   order by book.sale_amount desc limit 3
select book.title , author.name , press.name from book join press on book.Press_ID = press.Press_ID join author on book.Author_ID = author.Author_ID   order by book.sale_amount desc limit 3
select press.name , sum(book.sale_amount) from book join press on book.Press_ID = press.Press_ID  group by book.press_id
select press.name , sum(book.sale_amount) from book join press on book.Press_ID = press.Press_ID  group by book.press_id
select count(*) , press.name from book join press on book.Press_ID = press.Press_ID where  book.sale_amount > 1000  group by press.name
select press.name , count(*) from book join press on book.Press_ID = press.Press_ID where  book.sale_amount > 1000  group by press.name
select author.name from book join author on book.Author_ID = author.Author_ID   order by book.sale_amount desc limit 1
select author.name from book join author on book.Author_ID = author.Author_ID   order by book.sale_amount desc limit 1
select author.name , author.gender from book join author on book.Author_ID = author.Author_ID  group by book.author_id  order by count(*) desc limit 1
select author.name , author.gender from book join author on book.Author_ID = author.Author_ID  group by book.author_id  order by count(*) desc limit 1
select author.name from author   except select author.name from book join press on book.Press_ID = press.Press_ID join author on book.Author_ID = author.Author_ID where  press.name = "Accor"
select author.name from author   except select author.name from book join press on book.Press_ID = press.Press_ID join author on book.Author_ID = author.Author_ID where  press.name = "Accor"
select press.name , press.year_profits_billion from book join press on book.Press_ID = press.Press_ID  group by book.press_id having  count(*) > 2
select press.name , press.year_profits_billion from book join press on book.Press_ID = press.Press_ID  group by book.press_id having  count(*) > 2
select count(*) from Authors
select authors.author_name from Authors
select authors.author_name , authors.other_details from Authors
select authors.other_details from Authors where  authors.author_name = "Addison Denesik"
select count(*) from Documents
select documents.author_name from Documents where  documents.document_id = 4
select authors.author_name from Documents join Authors on Documents.author_name = Authors.author_name where  documents.document_name = "Travel to Brazil"
select count(*) from Documents where  documents.author_name = "Era Kerluke"
select documents.document_name , documents.document_description from Documents
select documents.document_id , documents.document_name from Documents join Authors on Documents.author_name = Authors.author_name where  authors.author_name = "Bianka Cummings"
select authors.author_name , authors.other_details from Documents join Authors on Documents.author_name = Authors.author_name where  documents.document_name = "Travel to China"
select documents.author_name , count(*) from Documents  group by documents.author_name
select documents.author_name from Documents  group by documents.author_name  order by count(*) desc limit 1
select authors.author_name from Documents join Authors on Documents.author_name = Authors.author_name  group by authors.author_name having  count(*) >= 2
select count(*) from Business_Processes
select business_processes.next_process_id , business_processes.process_name , business_processes.process_description from Business_Processes where  business_processes.process_id = 9
select business_processes.process_name from Business_Processes where  business_processes.process_id = 9
select count(*) from Process_Outcomes
select documents_processes.process_outcome_code , process_outcomes.process_outcome_description from Documents_Processes join Process_Outcomes on Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code
select process_outcomes.process_outcome_description from Process_Outcomes where  process_outcomes.process_outcome_code = "working"
select count(*) from Process_Status
select process_status.process_status_code , process_status.process_status_description from Process_Status
select process_status.process_status_description from Process_Status where  process_status.process_status_code = "ct"
select count(*) from Staff
select staff.staff_id , staff.staff_details from Staff
select staff.staff_details from Staff where  staff.staff_id = 100
select count(*) from Ref_Staff_Roles
select ref_staff_roles.staff_role_code , ref_staff_roles.staff_role_description from Ref_Staff_Roles
select ref_staff_roles.staff_role_description from Ref_Staff_Roles where  ref_staff_roles.staff_role_code = "HR"
select count( distinct documents_processes.document_id) from Documents_Processes
select documents_processes.process_id from Documents_Processes
select documents.document_id from Documents   except select documents_processes.document_id from Documents_Processes
select documents_processes.process_id from Documents_Processes   except select documents_processes.process_id from Documents_Processes
select process_outcomes.process_outcome_description , process_status.process_status_description from Documents_Processes join Process_Status on Documents_Processes.process_status_code = Process_Status.process_status_code join Process_Outcomes on Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code where  documents_processes.document_id = 0
select business_processes.process_name from Documents_Processes join Business_Processes on Documents_Processes.process_id = Business_Processes.process_id join Documents on Documents_Processes.document_id = Documents.document_id where  documents.document_name = "Travel to Brazil"
select documents_processes.process_id , count(*) from Documents_Processes  group by documents_processes.process_id
select count(*) from Staff_in_Processes join Documents_Processes on Staff_in_Processes.document_id = Documents_Processes.document_id where  staff_in_processes.document_id = 0 and documents_processes.process_id = 9
select staff_in_processes.staff_id , count(*) from Staff_in_Processes join Documents_Processes on Staff_in_Processes.document_id = Documents_Processes.document_id  group by staff_in_processes.staff_id
select staff_in_processes.staff_role_code , count(*) from Staff_in_Processes  group by staff_in_processes.staff_role_code
select count( distinct ref_staff_roles.staff_role_code) from Staff_in_Processes join Ref_Staff_Roles on Staff_in_Processes.staff_role_code = Ref_Staff_Roles.staff_role_code join Staff on Staff_in_Processes.staff_id = Staff.staff_id where  staff.staff_id = 3
select count(*) from Agencies
select count(*) from Agencies
select agencies.agency_id , agencies.agency_details from Agencies
select agencies.agency_id , agencies.agency_details from Agencies
select count(*) from Clients
select count(*) from Clients
select clients.client_id , clients.client_details from Clients
select clients.client_id , clients.client_details from Clients
select clients.agency_id , count(*) from Clients  group by clients.agency_id
select count(*) , clients.agency_id from Clients  group by clients.agency_id
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id  group by clients.agency_id  order by count(*) desc limit 1
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id  group by clients.agency_id  order by count(*) desc limit 1
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id  group by agencies.agency_id having  count(*) >= 2
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id  group by agencies.agency_id having  count(*) >= 2
select agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id where  clients.client_details = "Mac"
select agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id where  clients.client_details = "Mac"
select clients.client_details , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id
select clients.client_details , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id
select clients.sic_code , count(*) from Clients  group by clients.sic_code
select clients.sic_code , count(*) from Clients  group by clients.sic_code
select clients.client_id , clients.client_details from Clients where  clients.sic_code = "Bad"
select clients.client_id , clients.client_details from Clients where  clients.sic_code = "Bad"
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id
select agencies.agency_id , agencies.agency_details from Clients join Agencies on Clients.agency_id = Agencies.agency_id
select agencies.agency_id from Agencies   except select clients.agency_id from Clients
select clients.agency_id from Clients   except select clients.agency_id from Clients
select count(*) from Invoices
select count(*) from Invoices
select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from Invoices join Clients on Invoices.client_id = Clients.client_id where  clients.client_details = "Y"
select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from Invoices
select invoices.client_id , count(*) from Invoices  group by invoices.client_id
select invoices.client_id , count(*) from Invoices  group by invoices.client_id
select invoices.client_id , clients.client_details from Invoices join Clients on Invoices.client_id = Clients.client_id  group by invoices.client_id  order by count(*) desc limit 1
select clients.client_id , clients.client_details from Invoices join Clients on Invoices.client_id = Clients.client_id  group by invoices.client_id  order by count(*) desc limit 1
select invoices.client_id from Invoices  group by invoices.client_id having  count(*) >= 2
select invoices.client_id from Invoices  group by invoices.client_id having  count(*) > 2
select invoices.invoice_status , count(*) from Invoices  group by invoices.invoice_status
select invoices.invoice_status , count(*) from Invoices  group by invoices.invoice_status
select invoices.invoice_status from Invoices  group by invoices.invoice_status  order by count(*) desc limit 1
select invoices.invoice_status from Invoices  group by invoices.invoice_status  order by count(*) desc limit 1
select invoices.invoice_status , invoices.invoice_details , clients.client_details , agencies.agency_id , agencies.agency_details from Invoices join Clients on Invoices.client_id = Clients.client_id join Agencies on Clients.agency_id = Agencies.agency_id
select invoices.invoice_status , invoices.invoice_details , invoices.client_id , clients.client_details , agencies.agency_id from Invoices join Clients on Invoices.client_id = Clients.client_id join Agencies on Clients.agency_id = Agencies.agency_id
select meetings.meeting_type , meetings.other_details from Meetings
select meetings.meeting_type , meetings.other_details from Meetings
select meetings.meeting_outcome , meetings.purpose_of_meeting from Meetings
select meetings.meeting_outcome , meetings.purpose_of_meeting from Meetings
select payments.payment_id , payments.payment_details from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id where  invoices.invoice_status = "Working"
select payments.payment_id , payments.payment_details from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id where  invoices.invoice_status = "Working"
select invoices.invoice_id , invoices.invoice_status from Invoices   except select invoices.invoice_id , invoices.invoice_status from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id
select invoices.invoice_id , invoices.invoice_status from Invoices where  invoices.invoice_id not in (select Payments.invoice_id from Payments  )
select count(*) from Payments
select count(*) from Payments
select payments.payment_id , payments.invoice_id , payments.payment_details from Payments
select payments.payment_id , payments.invoice_id , payments.payment_details from Payments
select distinct payments.invoice_id , invoices.invoice_status from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id
select distinct payments.invoice_id , invoices.invoice_status from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id
select payments.invoice_id , count(*) from Payments  group by payments.invoice_id
select payments.invoice_id , count(*) from Payments  group by payments.invoice_id
select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id  group by payments.invoice_id  order by count(*) desc limit 1
select invoices.invoice_id , invoices.invoice_status , invoices.invoice_details from Payments join Invoices on Payments.invoice_id = Invoices.invoice_id  group by payments.invoice_id  order by count(*) desc limit 1
select count(*) from Staff
select count(*) from Staff
select staff.agency_id , count(*) from Staff  group by staff.agency_id
select staff.agency_id , count(*) from Staff  group by staff.agency_id
select agencies.agency_id , agencies.agency_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id join Meetings on Staff_in_Meetings.meeting_id = Meetings.meeting_id join Clients on Meetings.client_id = Clients.client_id join Agencies on Clients.agency_id = Agencies.agency_id  group by staff.agency_id  order by count(*) desc limit 1
select agencies.agency_id , agencies.agency_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id join Meetings on Staff_in_Meetings.meeting_id = Meetings.meeting_id join Clients on Meetings.client_id = Clients.client_id join Agencies on Clients.agency_id = Agencies.agency_id  group by staff.agency_id  order by count(*) desc limit 1
select meetings.meeting_outcome , count(*) from Meetings  group by meetings.meeting_outcome
select meetings.meeting_outcome , count(*) from Meetings  group by meetings.meeting_outcome
select meetings.client_id , count(*) from Meetings  group by meetings.client_id
select meetings.client_id , count(*) from Meetings  group by meetings.client_id
select meetings.meeting_type , count(*) from Meetings  group by meetings.client_id
select meetings.meeting_type , count(*) from Meetings  group by meetings.meeting_type
select meetings.meeting_id , meetings.meeting_outcome , meetings.meeting_type , clients.client_details from Meetings join Clients on Meetings.client_id = Clients.client_id
select meetings.meeting_id , meetings.meeting_outcome , meetings.meeting_type , clients.client_details from Meetings join Clients on Meetings.client_id = Clients.client_id
select staff_in_meetings.meeting_id , count(*) from Staff_in_Meetings  group by staff_in_meetings.meeting_id
select count(*) , staff_in_meetings.meeting_id from Staff_in_Meetings  group by staff_in_meetings.meeting_id
select staff_in_meetings.staff_id , count(*) from Staff_in_Meetings  group by staff_in_meetings.staff_id  order by count(*) asc limit 1
select staff_in_meetings.staff_id from Staff_in_Meetings  group by staff_in_meetings.staff_id  order by count(*) asc limit 1
select count( distinct staff_in_meetings.staff_id) from Staff_in_Meetings
select count( distinct staff_in_meetings.staff_id) from Staff_in_Meetings
select count(*) from Staff where  staff.staff_id not in (select Staff_in_Meetings.staff_id from Staff_in_Meetings  )
select count(*) from Staff where  staff.staff_id not in (select Staff_in_Meetings.staff_id from Staff_in_Meetings  )
select meetings.client_id , clients.client_details from Meetings join Clients on Meetings.client_id = Clients.client_id   union select meetings.client_id , clients.client_details from Invoices join Clients on Invoices.client_id = Clients.client_id join Meetings on Clients.client_id = Meetings.client_id
select meetings.client_id , clients.client_details from Meetings join Clients on Meetings.client_id = Clients.client_id   union select meetings.client_id , clients.client_details from Invoices join Clients on Invoices.client_id = Clients.client_id join Meetings on Clients.client_id = Meetings.client_id
select staff.staff_id , staff.staff_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id join Meetings on Staff_in_Meetings.meeting_id = Meetings.meeting_id where  staff.staff_details like "%s%"
select staff_in_meetings.staff_id , staff.staff_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id  group by staff.staff_details having  count(*) >= 1
select meetings.client_id , clients.sic_code , clients.agency_id from Meetings join Clients on Meetings.client_id = Clients.client_id  group by meetings.client_id having  count(*) = 1
select meetings.client_id , clients.sic_code , clients.agency_id from Invoices join Clients on Invoices.client_id = Clients.client_id join Meetings on Clients.client_id = Meetings.client_id  group by meetings.client_id having  count(*) = 1
select meetings.start_date_time , meetings.end_date_time , clients.client_details , staff.staff_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id join Meetings on Staff_in_Meetings.meeting_id = Meetings.meeting_id join Clients on Meetings.client_id = Clients.client_id
select meetings.start_date_time , meetings.end_date_time , clients.client_details , staff.staff_details from Staff_in_Meetings join Staff on Staff_in_Meetings.staff_id = Staff.staff_id join Meetings on Staff_in_Meetings.meeting_id = Meetings.meeting_id join Clients on Meetings.client_id = Clients.client_id
